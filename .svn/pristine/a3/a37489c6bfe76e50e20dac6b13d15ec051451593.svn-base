{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\components\\org-tree\\components\\org-view.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\components\\org-tree\\components\\org-view.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { on, off } from '@/libs/tools';\nvar menuList = [{\n  key: 'edit',\n  label: '编辑部门'\n}, {\n  key: 'detail',\n  label: '查看部门'\n}, {\n  key: 'new',\n  label: '新增子部门'\n}, {\n  key: 'delete',\n  label: '删除部门'\n}];\nexport default {\n  name: 'OrgView',\n  props: {\n    zoomHandled: {\n      type: Number,\n      default: 1\n    },\n    data: Object\n  },\n  data: function data() {\n    return {\n      currentContextMenuId: '',\n      orgTreeOffsetLeft: 0,\n      orgTreeOffsetTop: 0,\n      initPageX: 0,\n      initPageY: 0,\n      oldMarginLeft: 0,\n      oldMarginTop: 0,\n      canMove: false\n    };\n  },\n  computed: {\n    orgTreeStyle: function orgTreeStyle() {\n      return {\n        transform: \"translate(-50%, -50%) scale(\".concat(this.zoomHandled, \", \").concat(this.zoomHandled, \")\"),\n        marginLeft: \"\".concat(this.orgTreeOffsetLeft, \"px\"),\n        marginTop: \"\".concat(this.orgTreeOffsetTop, \"px\")\n      };\n    }\n  },\n  methods: {\n    handleNodeClick: function handleNodeClick(e, data, expand) {\n      expand();\n    },\n    closeMenu: function closeMenu() {\n      this.currentContextMenuId = '';\n    },\n    getBgColor: function getBgColor(data) {\n      return this.currentContextMenuId === data.id ? data.isRoot ? '#0d7fe8' : '#5d6c7b' : '';\n    },\n    nodeRender: function nodeRender(h, data) {\n      return h(\"div\", {\n        \"class\": ['custom-org-node', data.children && data.children.length ? 'has-children-label' : ''],\n        \"on\": {\n          \"mousedown\": function mousedown(event) {\n            return event.stopPropagation();\n          },\n          \"contextmenu\": this.contextmenu.bind(this, data)\n        }\n      }, [data.label, h(\"dropdown\", {\n        \"attrs\": {\n          \"trigger\": \"custom\",\n          \"visible\": this.currentContextMenuId === data.id\n        },\n        \"class\": \"context-menu\",\n        \"nativeOn\": {\n          \"click\": this.handleDropdownClick\n        },\n        \"on\": {\n          \"on-click\": this.handleContextMenuClick.bind(this, data)\n        },\n        \"style\": {\n          transform: \"scale(\".concat(1 / this.zoomHandled, \", \").concat(1 / this.zoomHandled, \")\")\n        },\n        \"directives\": [{\n          name: \"click-outside\",\n          value: this.closeMenu\n        }]\n      }, [h(\"dropdown-menu\", {\n        \"slot\": \"list\"\n      }, [menuList.map(function (item) {\n        return h(\"dropdown-item\", {\n          \"attrs\": {\n            \"name\": item.key\n          }\n        }, [item.label]);\n      })])])]);\n    },\n    contextmenu: function contextmenu(data, $event) {\n      var event = $event || window.event;\n      event.preventDefault ? event.preventDefault() : event.returnValue = false;\n      this.currentContextMenuId = data.id;\n    },\n    setDepartmentData: function setDepartmentData(data) {\n      data.isRoot = true;\n      this.departmentData = data;\n    },\n    mousedownView: function mousedownView(event) {\n      this.canMove = true;\n      this.initPageX = event.pageX;\n      this.initPageY = event.pageY;\n      this.oldMarginLeft = this.orgTreeOffsetLeft;\n      this.oldMarginTop = this.orgTreeOffsetTop;\n      on(document, 'mousemove', this.mousemoveView);\n      on(document, 'mouseup', this.mouseupView);\n    },\n    mousemoveView: function mousemoveView(event) {\n      if (!this.canMove) return;\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      this.orgTreeOffsetLeft = this.oldMarginLeft + pageX - this.initPageX;\n      this.orgTreeOffsetTop = this.oldMarginTop + pageY - this.initPageY;\n    },\n    mouseupView: function mouseupView() {\n      this.canMove = false;\n      off(document, 'mousemove', this.mousemoveView);\n      off(document, 'mouseup', this.mouseupView);\n    },\n    handleDropdownClick: function handleDropdownClick(event) {\n      event.stopPropagation();\n    },\n    handleDocumentContextmenu: function handleDocumentContextmenu() {\n      this.canMove = false;\n    },\n    handleContextMenuClick: function handleContextMenuClick(data, key) {\n      this.$emit('on-menu-click', {\n        data: data,\n        key: key\n      });\n    }\n  },\n  mounted: function mounted() {\n    on(document, 'contextmenu', this.handleDocumentContextmenu);\n  },\n  beforeDestroy: function beforeDestroy() {\n    off(document, 'contextmenu', this.handleDocumentContextmenu);\n  }\n};",null]}