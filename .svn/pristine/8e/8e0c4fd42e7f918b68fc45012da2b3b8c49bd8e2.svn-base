{"remainingRequest":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue","mtime":1562815615790},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data () {\n        return {\n            tableData3: [\n                {\n                    name: 'John Brown',\n                    age: 18,\n                    address: 'New York No. 1 Lake Park',\n                    date: '2016-10-03'\n                },\n                {\n                    name: 'Jim Green',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                    date: '2016-10-01'\n                },\n                {\n                    name: 'Joe Black',\n                    age: 30,\n                    address: 'Sydney No. 1 Lake Park',\n                    date: '2016-10-02'\n                },\n                {\n                    name: 'Jon Snow',\n                    age: 26,\n                    address: 'Ottawa No. 2 Lake Park',\n                    date: '2016-10-04'\n                },\n                {\n                    name: 'John Brown',\n                    age: 18,\n                    address: 'New York No. 1 Lake Park',\n                    date: '2016-10-03'\n                },\n                {\n                    name: 'Jim Green',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                    date: '2016-10-01'\n                },\n                {\n                    name: 'Joe Black',\n                    age: 30,\n                    address: 'Sydney No. 1 Lake Park',\n                    date: '2016-10-02'\n                },\n                {\n                    name: 'Jon Snow',\n                    age: 26,\n                    address: 'Ottawa No. 2 Lake Park',\n                    date: '2016-10-04'\n                }\n            ],\n            showBorder: false,\n            showStripe: false,\n            showHeader: true,\n            showIndex: true,\n            showCheckbox: false,\n            fixedHeader: false,\n            tableSize: 'default',\n            pageStyle: {\n              marginTop: '20px'\n            },\n            detailModel: false,\n            editModel: false,\n            editFormValidate: {\n                name: '',\n                mail: '',\n                city: '',\n                gender: '',\n                interest: [],\n                date: '',\n                time: '',\n                desc: ''\n            },\n            detailFormValidate: {},\n            ruleValidate: {\n                name: [\n                    { required: true, message: 'The name cannot be empty', trigger: 'blur' }\n                ],\n                mail: [\n                    { required: true, message: 'Mailbox cannot be empty', trigger: 'blur' },\n                    { type: 'email', message: 'Incorrect email format', trigger: 'blur' }\n                ],\n                city: [\n                    { required: true, message: 'Please select the city', trigger: 'change' }\n                ],\n                gender: [\n                    { required: true, message: 'Please select gender', trigger: 'change' }\n                ],\n                interest: [\n                    { required: true, type: 'array', min: 1, message: 'Choose at least one hobby', trigger: 'change' },\n                    { type: 'array', max: 2, message: 'Choose two hobbies at best', trigger: 'change' }\n                ],\n                date: [\n                    { required: true, type: 'date', message: 'Please select the date', trigger: 'change' }\n                ],\n                time: [\n                    { required: true, type: 'string', message: 'Please select time', trigger: 'change' }\n                ],\n                desc: [\n                    { required: true, message: 'Please enter a personal introduction', trigger: 'blur' },\n                    { type: 'string', min: 20, message: 'Introduce no less than 20 words', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    computed: {\n        tableColumns3 () {\n            let columns = [];\n            if (this.showCheckbox) {\n                columns.push({\n                    type: 'selection',\n                    width: 60,\n                    align: 'center'\n                })\n            }\n            if (this.showIndex) {\n                columns.push({\n                    type: 'index',\n                    width: 60,\n                    align: 'center'\n                })\n            }\n            columns.push({\n                title: 'Date',\n                key: 'date',\n                sortable: true,\n                fixed: 'left'\n            });\n            columns.push({\n                title: 'Name',\n                key: 'name'\n            });\n            columns.push({\n                title: 'Age',\n                key: 'age',\n                sortable: true,\n                filters: [\n                    {\n                        label: 'Greater than 25',\n                        value: 1\n                    },\n                    {\n                        label: 'Less than 25',\n                        value: 2\n                    }\n                ],\n                filterMultiple: false,\n                filterMethod (value, row) {\n                    if (value === 1) {\n                        return row.age > 25;\n                    } else if (value === 2) {\n                        return row.age < 25;\n                    }\n                }\n            });\n            columns.push({\n                title: 'Address',\n                key: 'address',\n                filters: [\n                    {\n                        label: 'New York',\n                        value: 'New York'\n                    },\n                    {\n                        label: 'London',\n                        value: 'London'\n                    },\n                    {\n                        label: 'Sydney',\n                        value: 'Sydney'\n                    }\n                ],\n                filterMethod (value, row) {\n                    return row.address.indexOf(value) > -1;\n                }\n            });\n            columns.push({\n                title: 'Action',\n                key: 'action',\n                width: 350,\n                align: 'center',\n                render: (h, params) => {\n                    return h('div', [\n                        h('Button', {\n                            props: {\n                                type: 'info',\n                                size: 'small'\n                            },\n                            style: {\n                                marginRight: '5px'\n                            },\n                            on: {\n                                click: () => {\n                                    this.show(params.index)\n                                }\n                            }\n                        }, '详情'),\n                        h('Button', {\n                            props: {\n                                type: 'error',\n                                size: 'small'\n                            },\n                            style: {\n                                marginRight: '5px'\n                            },\n                            on: {\n                                click: () => {\n                                    this.remove(params.index)\n                                }\n                            }\n                        }, '删除'),\n                        h('Button', {\n                            props: {\n                                type: 'primary',\n                                size: 'small'\n                            },\n                            on: {\n                                click: () => {\n                                    this.edit(params.index)\n                                }\n                            }\n                        }, '编辑')\n                    ]);\n                }\n            });\n            return columns;\n        }\n    },\n    methods: {\n        show (index) {\n            this.detailModel = true;\n        },\n        remove (index) {\n            this.tableData3.splice(index, 1);\n        },\n        edit (index) {\n          this.editModel = true;\n        },\n        handleSubmit (name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n        },\n        handleReset (name) {\n            this.$refs[name].resetFields();\n        }\n    }\n}\n",null]}