{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\iview-admin-master\\src\\router\\index.js","dependencies":[{"path":"D:\\iview-admin-master\\src\\router\\index.js","mtime":1562911643073},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from \"./routers\";\nimport store from '@/store';\nimport iView from 'iview';\nimport { setToken, getToken, canTurnTo, setTitle, setRouterInLocalstorage, getRouterFromLocalstorage } from '@/libs/util';\nimport config from '@/config';\nvar homeName = config.homeName;\nvar getRouter;\nVue.use(Router);\nvar router = new Router({\n  routes: routes,\n  mode: 'history'\n});\nvar LOGIN_PAGE_NAME = 'login';\n\nvar turnTo = function turnTo(to, access, next) {\n  console.log('turnto');\n  if (canTurnTo(to.name, access, routes)) next(); // 有权限，可访问\n  else next({\n      replace: true,\n      name: 'error_401'\n    }); // 无权限，重定向到401页面\n};\n\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n  console.log(from, to.name);\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    console.log('未登录且要跳转的页面不是登录页');\n    store.dispatch('getPublicKey').then(function (user) {\n      next({\n        name: LOGIN_PAGE_NAME // 跳转到登录页\n\n      });\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    console.log('未登陆且要跳转的页面是登录页'); // 未登陆且要跳转的页面是登录页\n\n    store.dispatch('getPublicKey').then(function (user) {\n      next(); // 跳转\n    });\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    console.log('已登录且要跳转的页面是登录页');\n    next({\n      name: homeName // 跳转到homeName页\n\n    });\n  } else {\n    if (!getRouter) {\n      if (!store.state.user.routes) {\n        store.dispatch('getNav').then(function (res) {\n          getRouter = res;\n          router.options.routes = getRouter; // 必须在addroutes前，使用router.options.routes=XXXXX的方法手动添加\n\n          router.addRoutes(getRouter); // 动态添加路由\n\n          console.log('已经登陆跳转的不是登录页，并且没有getRouter', to.name);\n          next({\n            name: homeName\n          }); // next()\n        });\n      } else {\n        console.log('已经登陆跳转的不是登录页，并且有getRouter', to.name);\n        getRouter = store.state.user.routes;\n        next();\n      }\n    } else {\n      next();\n    } // if (store.state.user.hasGetInfo) {\n    //   console.log('store.state.user.hasGetInfo', store.state.user.hasGetInfo)\n    //   turnTo(to, store.state.user.access, next)\n    // } else {\n    //   // store.dispatch('getUserInfo').then(user => {\n    //   //   // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n    //   //   console.log('router index.js getUserInfo', router)\n    //   //   // next({\n    //   //   //   name: homeName // 跳转到homeName页\n    //   //   // })\n    //   //   // turnTo(to, user.access, next)\n    //   // }).catch(() => {\n    //   //   console.log('router index.js catch')\n    //   //   setToken('')\n    //   //   // localSave('router', '')\n    //   //   // next({\n    //   //   //   name: 'login'\n    //   //   // })\n    //   // })\n    // }\n\n  }\n});\nrouter.afterEach(function (to) {\n  setTitle(to, router.app);\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",null]}