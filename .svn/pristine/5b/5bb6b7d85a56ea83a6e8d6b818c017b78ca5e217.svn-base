{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\system\\systemcode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\system\\systemcode.vue","mtime":1564625415832},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryForPage, saveItem, updateItem, deleteItems, exportExcel, exportPdf } from '@/api/system/systemcode';\nimport { forEach, getAssign } from '@/libs/tools';\nimport { formatterEditMode } from '@/libs/formatter';\nimport { constants } from 'crypto';\nexport default {\n  data: function data() {\n    return {\n      systemCodes: [],\n      searchCondition: {},\n      modelTitle: '新增',\n      rows: 10,\n      total: 0,\n      currentPage: 1,\n      openSearchBlock: false,\n      showStripe: false,\n      showIndex: false,\n      showCheckbox: true,\n      fixedHeader: false,\n      pageStyle: {\n        marginTop: '20px'\n      },\n      detailModel: false,\n      editModel: false,\n      exportModel: false,\n      loading: false,\n      systemCode: {},\n      ruleValidate: {\n        fieldname: [{\n          required: true,\n          message: '属性名称不能为空',\n          trigger: 'blur'\n        }],\n        codedesc: [{\n          type: 'string',\n          min: 20,\n          message: '不能少于20个字',\n          trigger: 'blur'\n        }]\n      },\n      indeterminate: false,\n      checkAll: false,\n      checkedColums: []\n    };\n  },\n  computed: {\n    tableColumns3: function tableColumns3() {\n      var _this = this;\n\n      var columns = [];\n\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center',\n          fixed: 'left'\n        });\n      }\n\n      if (this.showIndex) {\n        columns.push({\n          type: 'index',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      columns.push({\n        title: '代码属性',\n        key: 'field',\n        sortable: true\n      });\n      columns.push({\n        title: '代码属性名称',\n        key: 'fieldname'\n      });\n      columns.push({\n        title: '代码值',\n        key: 'code',\n        sortable: true // render: (h, params) => {\n        //     return h('div', [\n        //         h('input', {\n        //         })\n        //     ]);\n        // }\n\n      });\n      columns.push({\n        title: '代码描述',\n        key: 'codedesc'\n      });\n      columns.push({\n        title: '可编辑',\n        key: 'editmode',\n        render: function render(h, params) {\n          var value = formatterEditMode(params.row.editmode);\n          return h('div', value);\n        }\n      });\n      columns.push({\n        title: '排序',\n        key: 'sortno'\n      });\n      columns.push({\n        title: '备注',\n        key: 'remark'\n      });\n      columns.push({\n        title: '操作',\n        key: 'action',\n        width: 350,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'success',\n              size: 'small',\n              icon: 'md-create'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.index);\n              }\n            }\n          }, '编辑'), h('Button', {\n            props: {\n              type: 'info',\n              size: 'small',\n              icon: 'md-eye'\n            },\n            on: {\n              click: function click() {\n                _this.show(params.index);\n              }\n            }\n          }, '详情')]);\n        }\n      });\n      return columns;\n    }\n  },\n  methods: {\n    show: function show(index) {\n      this.detailModel = true;\n      this.systemCode = JSON.parse(JSON.stringify(this.systemCodes[index]));\n      this.systemCode.editmode = formatterEditMode(this.systemCode.editmode);\n    },\n    remove: function remove() {\n      var _this2 = this;\n\n      var removeids = [];\n      forEach(this.$refs.systemCodeTable.getSelection(), function (item, index) {\n        removeids.push(item.codeid);\n      });\n\n      if (removeids.length) {\n        deleteItems(removeids.join(',')).then(function (rs) {\n          console.log(rs, 'delete');\n\n          _this2.$Message.success('删除成功!');\n\n          pageChange(1);\n        });\n      } else {}\n    },\n    edit: function edit(index) {\n      console.log(index, 'edit');\n      this.editModel = true;\n\n      if (index !== undefined) {\n        this.modelTitle = '编辑';\n        this.systemCode = JSON.parse(JSON.stringify(this.systemCodes[index]));\n      }\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this3 = this;\n\n      this.loading = true;\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          console.log(valid, _this3.systemCode, 99999);\n\n          if (_this3.modelTitle == '新增') {\n            saveItem(_this3.systemCode).then(function (res) {\n              console.log(res, 'saveItem');\n              _this3.loading = false;\n\n              _this3.$Message.success('添加成功!');\n\n              _this3.editModel = false;\n\n              _this3.pageChange(1);\n            });\n          } else {\n            updateItem(_this3.systemCode).then(function (res) {\n              console.log(res, 'updateItem');\n              _this3.loading = false;\n\n              _this3.$Message.success('修改成功!');\n\n              _this3.editModel = false;\n\n              _this3.pageChange(1);\n            });\n          }\n        } else {\n          _this3.$Message.error('请注意格式!');\n        }\n      });\n    },\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n    },\n    pageChange: function pageChange(page) {\n      var _this4 = this;\n\n      console.log(page);\n      this.currentPage = page;\n      var params = getAssign(this.searchCondition, {\n        page: page,\n        rows: this.rows\n      });\n      queryForPage(params).then(function (res) {\n        console.log(res, 111);\n        _this4.total = res.data.total;\n        _this4.systemCodes = res.data.rows;\n      });\n    },\n    refresh: function refresh() {\n      this.pageChange(1);\n    },\n    onPageSizeChange: function onPageSizeChange() {\n      console.log(this);\n    },\n    exportList: function exportList() {\n      this.exportModel = true;\n    },\n    cancel: function cancel() {\n      this.exportModel = false;\n    },\n    handleCheckAll: function handleCheckAll() {\n      var _this5 = this;\n\n      if (this.indeterminate) {\n        this.checkAll = false;\n      } else {\n        this.checkAll = !this.checkAll;\n      }\n\n      this.indeterminate = false;\n\n      if (this.checkAll) {\n        forEach(this.tableColumns3, function (item, index) {\n          _this5.checkedColums.push(index);\n        });\n      } else {\n        this.checkedColums = [];\n      }\n    },\n    checkColumChange: function checkColumChange(data) {\n      if (data.length === 3) {\n        this.indeterminate = false;\n        this.checkAll = true;\n      } else if (data.length > 0) {\n        this.indeterminate = true;\n        this.checkAll = false;\n      } else {\n        this.indeterminate = false;\n        this.checkAll = false;\n      }\n    },\n    formexport: function formexport(url) {\n      var allColValueArr = '';\n      var allColNameArr = '';\n\n      for (var i = 0; i < this.checkedColums.length; i++) {\n        if (this.tableColumns3[this.checkedColums[i]].key) {\n          allColValueArr += this.tableColumns3[this.checkedColums[i]].key + ',';\n          allColNameArr += this.tableColumns3[this.checkedColums[i]].title + ',';\n        }\n      }\n\n      document.getElementById('exportHiddenForm').action = url;\n      document.getElementById('allColNames').value = encodeURI(allColNameArr);\n      document.getElementById('allColValues').value = encodeURI(allColValueArr);\n      console.log(this.$refs.exportHiddenForm, 8888);\n      document.getElementById('exportHiddenForm').submit();\n    },\n    exportForPDF: function exportForPDF() {\n      console.log(exportPdf());\n      this.formexport(exportPdf());\n    },\n    exportForEXCEL: function exportForEXCEL() {\n      this.formexport(exportExcel());\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    queryForPage({\n      page: this.currentPage,\n      rows: this.rows\n    }).then(function (res) {\n      console.log(res, 8888);\n      _this6.total = res.data.total;\n      _this6.systemCodes = res.data.rows;\n    });\n  }\n};",{"version":3,"sources":["systemcode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA,SAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,QAAA,yBAAA;AACA,SAAA,OAAA,EAAA,SAAA,QAAA,cAAA;AACA,SAAA,iBAAA,QAAA,kBAAA;AACA,SAAA,SAAA,QAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA,CALA;AAMA,MAAA,WAAA,EAAA,CANA;AAOA,MAAA,eAAA,EAAA,KAPA;AAQA,MAAA,UAAA,EAAA,KARA;AASA,MAAA,SAAA,EAAA,KATA;AAUA,MAAA,YAAA,EAAA,IAVA;AAWA,MAAA,WAAA,EAAA,KAXA;AAYA,MAAA,SAAA,EAAA;AACA,QAAA,SAAA,EAAA;AADA,OAZA;AAeA,MAAA,WAAA,EAAA,KAfA;AAgBA,MAAA,SAAA,EAAA,KAhBA;AAiBA,MAAA,WAAA,EAAA,KAjBA;AAkBA,MAAA,OAAA,EAAA,KAlBA;AAmBA,MAAA,UAAA,EAAA,EAnBA;AAqBA,MAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,IAAA,EAAA,QAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AAJA,OArBA;AA6BA,MAAA,aAAA,EAAA,KA7BA;AA8BA,MAAA,QAAA,EAAA,KA9BA;AA+BA,MAAA,aAAA,EAAA;AA/BA,KAAA;AAiCA,GAnCA;AAoCA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,UAAA,OAAA,GAAA,EAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA,QAHA;AAIA,UAAA,KAAA,EAAA;AAJA,SAAA;AAMA;;AACA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAAA;AAKA;;AACA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,OAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA,IAHA,CAIA;AACA;AACA;AAEA;AACA;AACA;;AAVA,OAAA;AAYA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA,UAFA;AAGA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,KAAA,GAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA;AANA,OAAA;AAQA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA,QAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,IAAA,EAAA,OAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aADA;AAMA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA,aANA;AASA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAHA;AATA,WAAA,EAcA,IAdA,CADA,EAgBA,CAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA,OAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aADA;AAMA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAHA;AANA,WAAA,EAWA,IAXA,CAhBA,CAAA,CAAA;AA8BA;AApCA,OAAA;AAsCA,aAAA,OAAA;AACA;AAlGA,GApCA;AAwIA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,KADA,EACA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,iBAAA,CAAA,KAAA,UAAA,CAAA,QAAA,CAAA;AACA,KALA;AAMA,IAAA,MANA,oBAMA;AAAA;;AACA,UAAA,SAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,KAAA,CAAA,eAAA,CAAA,YAAA,EAAA,EAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,QAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AACA,OAFA,CAAA;;AAGA,UAAA,SAAA,CAAA,MAAA,EAAA;AACA,QAAA,WAAA,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,EAAA,EAAA,QAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;;AACA,UAAA,UAAA,CAAA,CAAA,CAAA;AACA,SAJA;AAKA,OANA,MAMA,CAEA;AACA,KApBA;AAqBA,IAAA,IArBA,gBAqBA,KArBA,EAqBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA;AACA,WAAA,SAAA,GAAA,IAAA;;AACA,UAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,aAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA,KA5BA;AA6BA,IAAA,YA7BA,wBA6BA,IA7BA,EA6BA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,IAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,CAAA,UAAA,EAAA,KAAA;;AACA,cAAA,MAAA,CAAA,UAAA,IAAA,IAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,UAAA;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,UAAA,CAAA,CAAA;AACA,aANA;AAOA,WARA,MAQA;AACA,YAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,YAAA;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,UAAA,CAAA,CAAA;AACA,aANA;AAOA;AAEA,SApBA,MAoBA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA;AACA;AACA,OAxBA;AAyBA,KAxDA;AAyDA,IAAA,WAzDA,uBAyDA,IAzDA,EAyDA;AACA,WAAA,KAAA,CAAA,IAAA,EAAA,WAAA;AACA,KA3DA;AA4DA,IAAA,UA5DA,sBA4DA,IA5DA,EA4DA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA,SAAA,CAAA,KAAA,eAAA,EAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,CAAA;AACA,MAAA,YAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAJA;AAKA,KArEA;AAsEA,IAAA,OAtEA,qBAsEA;AACA,WAAA,UAAA,CAAA,CAAA;AACA,KAxEA;AAyEA,IAAA,gBAzEA,8BAyEA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KA3EA;AA4EA,IAAA,UA5EA,wBA4EA;AACA,WAAA,WAAA,GAAA,IAAA;AAEA,KA/EA;AAgFA,IAAA,MAhFA,oBAgFA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAlFA;AAmFA,IAAA,cAnFA,4BAmFA;AAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA;;AACA,WAAA,aAAA,GAAA,KAAA;;AAEA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,aAAA,EAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,KAAA;AACA,SAFA,CAAA;AAGA,OAJA,MAIA;AACA,aAAA,aAAA,GAAA,EAAA;AACA;AACA,KAlGA;AAmGA,IAAA,gBAnGA,4BAmGA,IAnGA,EAmGA;AACA,UAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA;AACA,aAAA,QAAA,GAAA,IAAA;AACA,OAHA,MAGA,IAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,aAAA,aAAA,GAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA;AACA,KA9GA;AA+GA,IAAA,UA/GA,sBA+GA,GA/GA,EA+GA;AACA,UAAA,cAAA,GAAA,EAAA;AACA,UAAA,aAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,aAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA;AACA,UAAA,cAAA,IAAA,KAAA,aAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,EAAA,GAAA,GAAA,GAAA;AACA,UAAA,aAAA,IAAA,KAAA,aAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,EAAA,KAAA,GAAA,GAAA;AACA;AACA;;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,EAAA,MAAA,GAAA,GAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,aAAA,EAAA,KAAA,GAAA,SAAA,CAAA,aAAA,CAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,cAAA,EAAA,KAAA,GAAA,SAAA,CAAA,cAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA,CAAA,gBAAA,EAAA,IAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,kBAAA,EAAA,MAAA;AACA,KA7HA;AA8HA,IAAA,YA9HA,0BA8HA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA;AACA,WAAA,UAAA,CAAA,SAAA,EAAA;AACA,KAjIA;AAkIA,IAAA,cAlIA,4BAkIA;AACA,WAAA,UAAA,CAAA,WAAA,EAAA;AACA;AApIA,GAxIA;AA8QA,EAAA,OA9QA,qBA8QA;AAAA;;AACA,IAAA,YAAA,CAAA;AACA,MAAA,IAAA,EAAA,KAAA,WADA;AAEA,MAAA,IAAA,EAAA,KAAA;AAFA,KAAA,CAAA,CAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,MAAA,MAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAPA;AAQA;AAvRA,CAAA","sourcesContent":["<template>\r\n    <Card shadow>\r\n        <div>\r\n            <div>\r\n                <div class=\"page-title\">\r\n                    全局代码\r\n                </div>\r\n                <div class=\"table-button-group pull-right\">\r\n                    <Button type=\"warning\" @click=\"openSearchBlock = !openSearchBlock\">搜索</Button>\r\n                    <Button type=\"info\" @click=\"edit()\">新增</Button>\r\n                    <Button type=\"primary\" @click=\"refresh()\">刷新</Button>\r\n                    <Button type=\"error\" @click=\"remove()\">删除</Button>\r\n                    <Button @click=\"exportList()\">导出</Button>\r\n                </div>\r\n                <div class=\"clear-fix\"></div>\r\n                <div v-show=\"openSearchBlock\" class=\"search-block\">\r\n                    <div class=\"search-block-item\">\r\n                        <label for=\"\" >代码属性</label>\r\n                        <Input clearable placeholder=\"输入关键字搜索\" class=\"search-input\" style=\"width: auto\" v-model=\"searchCondition.field\"/>\r\n                    </div>\r\n                    <div class=\"search-block-item\">\r\n                        <label for=\"\" >代码属性名称</label>\r\n                        <Input clearable placeholder=\"输入关键字搜索\" class=\"search-input\" style=\"width: auto\" v-model=\"searchCondition.fieldname\"/>\r\n                    </div>\r\n                    <div class=\"search-block-footer\">\r\n                        <Button type=\"primary\" @click=\"pageChange(1)\">查询</Button>\r\n                        <Button type=\"warning\" @click=\"searchCondition = {}\">重置</Button>\r\n                        <Button @click=\"openSearchBlock = false\">取消</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table \r\n                ref=\"systemCodeTable\" border \r\n                :stripe=\"showStripe\" show-header \r\n                :height=\"fixedHeader ? 250 : ''\" \r\n                :data=\"systemCodes\" \r\n                :columns=\"tableColumns3\"\r\n            >\r\n            </Table>\r\n            <Page \r\n                :total=total \r\n                show-sizer \r\n                show-elevator \r\n                show-total \r\n                :styles=\"pageStyle\" \r\n                :current=\"currentPage\" \r\n                :page-size=\"rows\"\r\n                @on-change=\"pageChange\"\r\n                @on-page-size-change=\"onPageSizeChange\"\r\n            />\r\n            <Modal \r\n                v-model=\"editModel\"  \r\n                scrollable \r\n                :loading=\"loading\"\r\n                width=\"60\">\r\n                <p slot=\"header\">\r\n                    <span>{{modelTitle}}-全局代码</span>\r\n                </p>\r\n                <Form ref=\"systemCodeForEdit\" :model=\"systemCode\" :rules=\"ruleValidate\" :label-width=\"120\" inline>\r\n                    <FormItem label=\"代码属性\" prop=\"field\">\r\n                        <Input v-model=\"systemCode.field\" placeholder=\"请输入代码属性\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"代码属性名称\" prop=\"fieldname\">\r\n                        <Input v-model=\"systemCode.fieldname\" placeholder=\"请输入代码属性名称\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"代码值\" prop=\"code\">\r\n                        <Input v-model=\"systemCode.code\" placeholder=\"请输入代码值\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"代码描述\" prop=\"codedesc\">\r\n                        <Input v-model=\"systemCode.codedesc\" placeholder=\"请输入代码描述\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"可编辑\" prop=\"editmode\">\r\n                        <Select v-model=\"systemCode.editmode\" placeholder=\"请选择\">\r\n                            <Option value=\"1\">是</Option>\r\n                            <Option value=\"0\">否</Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    <FormItem label=\"排序\" prop=\"sortno\">\r\n                        <Input v-model=\"systemCode.sortno\" placeholder=\"请输入排序序号\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"备注\" prop=\"remark\" style=\"width: 100%;\">\r\n                        <Input v-model=\"systemCode.remark\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\" placeholder=\"请输入备注\"></Input>\r\n                    </FormItem>\r\n                </Form>\r\n                <div slot=\"footer\">\r\n                    <Button type=\"primary\" @click=\"handleSubmit('systemCodeForEdit')\">确定</Button>\r\n                    <Button @click=\"handleReset('systemCodeForEdit')\" style=\"margin-left: 8px\">重置</Button>\r\n                </div>\r\n            </Modal>\r\n            \r\n            <Modal v-model=\"detailModel\" scrollable width=\"80\">\r\n                <p slot=\"header\">\r\n                    <span>详情-全局代码</span>\r\n                </p>\r\n                <Form ref=\"systemCodeForDetail\" :model=\"systemCode\"  :label-width=\"120\" inline class=\"detail-form\">\r\n                    <FormItem label=\"代码属性\" prop=\"field\">\r\n                        {{systemCode.field}}\r\n                    </FormItem>\r\n                    <FormItem label=\"代码属性名称\" prop=\"fieldname\">\r\n                        {{systemCode.fieldname}}\r\n                    </FormItem>\r\n                    <FormItem label=\"代码值\" prop=\"code\">\r\n                        {{systemCode.code}}\r\n                    </FormItem>\r\n                    <FormItem label=\"代码描述\" prop=\"fieldname\">\r\n                        {{systemCode.fieldname}}\r\n                    </FormItem>\r\n                    <FormItem label=\"可编辑\" prop=\"editmode\">\r\n                        {{systemCode.editmode}}\r\n                    </FormItem>\r\n                    <FormItem label=\"排序\" prop=\"sortno\">\r\n                        {{systemCode.sortno}}\r\n                    </FormItem>\r\n                    <FormItem label=\"备注\" prop=\"remark\" style=\"width: 100%;\">\r\n                        {{systemCode.remark}}\r\n                    </FormItem>\r\n                </Form>\r\n            </Modal>\r\n\r\n\r\n            <Modal v-model=\"exportModel\"  scrollable width=\"80\">\r\n                <p slot=\"header\">\r\n                    <span>导出-全局代码</span>\r\n                </p>\r\n                <Form ref=\"systemCodeForExport\" :label-width=\"120\" inline class=\"detail-form\">\r\n                    <div style=\"border-bottom: 1px solid #e9e9e9;padding-bottom:6px;margin-bottom:6px;\">\r\n                        <Checkbox\r\n                            :indeterminate=\"indeterminate\"\r\n                            :value=\"checkAll\"\r\n                            @click.prevent.native=\"handleCheckAll\">全选</Checkbox>\r\n                    </div>\r\n                    <CheckboxGroup ref=\"checkboxGroupForColums\" v-model=\"checkedColums\" @on-change=\"checkColumChange\">\r\n                         <Checkbox :label=\"index\" v-for=\"(colum, index) in tableColumns3\" :key=\"index\" v-show=\"colum.key\">\r\n                            <span>{{colum.title}}</span>\r\n                        </Checkbox>\r\n                    </CheckboxGroup>\r\n                </Form>\r\n                <form ref=\"exportHiddenForm\" id=\"exportHiddenForm\" target=\"_blank\" style=\"visibility:hidden;\" method=\"POST\" action=\"\">\r\n                    <input type=\"hidden\" ref=\"allColValues\" id=\"allColValues\" name=\"allColValues\" value=\"\" />\r\n                    <input type=\"hidden\" ref=\"allColNames\" id=\"allColNames\" name=\"allColValues\" value=\"\" />\r\n                </form>\r\n                <div slot=\"footer\">\r\n                    <Button type=\"primary\" @click=\"exportForPDF()\">导出PDF文件</Button>\r\n                    <Button type=\"warning\" @click=\"exportForEXCEL()\" style=\"margin-left: 8px\">导出Excel文件</Button>\r\n                    <Button @click=\"cancel()\" style=\"margin-left: 8px\">取消</Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    </Card>\r\n</template>\r\n<script>\r\n    import { queryForPage, saveItem, updateItem, deleteItems, exportExcel, exportPdf } from '@/api/system/systemcode'\r\n    import { forEach, getAssign } from '@/libs/tools'\r\n    import {formatterEditMode} from '@/libs/formatter'\r\n    import { constants } from 'crypto';\r\n    export default {\r\n        data () {\r\n            return {\r\n                systemCodes: [],\r\n                searchCondition: {},\r\n                modelTitle: '新增',\r\n                rows: 10,\r\n                total: 0,\r\n                currentPage: 1,\r\n                openSearchBlock: false,\r\n                showStripe: false,\r\n                showIndex: false,\r\n                showCheckbox: true,\r\n                fixedHeader: false,\r\n                pageStyle: {\r\n                  marginTop: '20px'\r\n                },\r\n                detailModel: false,\r\n                editModel: false,\r\n                exportModel: false,\r\n                loading: false,\r\n                systemCode: {\r\n                },\r\n                ruleValidate: {\r\n                    fieldname: [\r\n                        { required: true, message: '属性名称不能为空', trigger: 'blur' }\r\n                    ],\r\n                    codedesc: [\r\n                        { type: 'string', min: 20, message: '不能少于20个字', trigger: 'blur' }\r\n                    ]\r\n                },\r\n                indeterminate: false,\r\n                checkAll: false,\r\n                checkedColums: []\r\n            }\r\n        },\r\n        computed: {\r\n            tableColumns3 () {\r\n                let columns = [];\r\n                if (this.showCheckbox) {\r\n                    columns.push({\r\n                        type: 'selection',\r\n                        width: 60,\r\n                        align: 'center',\r\n                        fixed: 'left'\r\n                    })\r\n                }\r\n                if (this.showIndex) {\r\n                    columns.push({\r\n                        type: 'index',\r\n                        width: 60,\r\n                        align: 'center'\r\n                    })\r\n                }\r\n                columns.push({\r\n                    title: '代码属性',\r\n                    key: 'field',\r\n                    sortable: true                    \r\n                });\r\n                columns.push({\r\n                    title: '代码属性名称',\r\n                    key: 'fieldname'\r\n                });\r\n                columns.push({\r\n                    title: '代码值',\r\n                    key: 'code',\r\n                    sortable: true\r\n                    // render: (h, params) => {\r\n                    //     return h('div', [\r\n                    //         h('input', {\r\n\r\n                    //         })\r\n                    //     ]);\r\n                    // }\r\n                });\r\n                columns.push({\r\n                    title: '代码描述',\r\n                    key: 'codedesc',\r\n                });\r\n                columns.push({\r\n                    title: '可编辑',\r\n                    key: 'editmode',\r\n                    render: (h, params) => {\r\n                        let value = formatterEditMode(params.row.editmode)\r\n                        return h('div', value);\r\n                    }\r\n                });\r\n                columns.push({\r\n                    title: '排序',\r\n                    key: 'sortno'\r\n                });\r\n                columns.push({\r\n                    title: '备注',\r\n                    key: 'remark'\r\n                });\r\n                columns.push({\r\n                    title: '操作',\r\n                    key: 'action',\r\n                    width: 350,\r\n                    align: 'center',\r\n                    render: (h, params) => {\r\n                        return h('div', [\r\n                            h('Button', {\r\n                                props: {\r\n                                    type: 'success',\r\n                                    size: 'small',\r\n                                    icon: 'md-create'\r\n                                },\r\n                                style: {\r\n                                    marginRight: '5px'\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.edit(params.index)\r\n                                    }\r\n                                }\r\n                            }, '编辑'),\r\n                            h('Button', {\r\n                                props: {\r\n                                    type: 'info',\r\n                                    size: 'small',\r\n                                    icon: 'md-eye'\r\n                                },\r\n                                on: {\r\n                                    click: () => {\r\n                                        this.show(params.index)\r\n                                    }\r\n                                }\r\n                            }, '详情')\r\n                            \r\n                        ]);\r\n                    }\r\n                });\r\n                return columns;\r\n            }\r\n        },\r\n        methods: {\r\n            show (index) {\r\n                this.detailModel = true;\r\n                this.systemCode = JSON.parse(JSON.stringify(this.systemCodes[index]));\r\n                this.systemCode.editmode = formatterEditMode(this.systemCode.editmode) \r\n            },\r\n            remove () {\r\n                let removeids = [];\r\n                forEach(this.$refs.systemCodeTable.getSelection(), (item, index) => {\r\n                    removeids.push(item.codeid);\r\n                })\r\n                if (removeids.length) {\r\n                    deleteItems(removeids.join(',')).then(rs => {\r\n                        console.log(rs, 'delete')\r\n                        this.$Message.success('删除成功!');\r\n                        pageChange(1)\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            },\r\n            edit (index) {\r\n                console.log(index, 'edit')\r\n                this.editModel = true;\r\n                if (index !== undefined) {\r\n                    this.modelTitle = '编辑';\r\n                    this.systemCode = JSON.parse(JSON.stringify(this.systemCodes[index]));\r\n                }              \r\n            },\r\n            handleSubmit (name) {\r\n                this.loading = true\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        console.log(valid, this.systemCode ,99999)\r\n                        if (this.modelTitle == '新增') {\r\n                            saveItem(this.systemCode).then(res => {\r\n                                console.log(res, 'saveItem')\r\n                                this.loading = false\r\n                                this.$Message.success('添加成功!');\r\n                                this.editModel = false;\r\n                                this.pageChange(1);\r\n                            })\r\n                        } else {\r\n                            updateItem(this.systemCode).then(res => {\r\n                                console.log(res, 'updateItem')\r\n                                this.loading = false\r\n                                this.$Message.success('修改成功!');\r\n                                this.editModel = false;\r\n                                this.pageChange(1);\r\n                            })\r\n                        }\r\n                        \r\n                    } else {\r\n                        this.$Message.error('请注意格式!');\r\n                    }\r\n                })\r\n            },\r\n            handleReset (name) {\r\n                this.$refs[name].resetFields();\r\n            },\r\n            pageChange (page) {\r\n                console.log(page)\r\n                this.currentPage = page\r\n                const params = getAssign(this.searchCondition, {page: page, rows: this.rows})\r\n                queryForPage(params).then(res => {\r\n                    console.log(res, 111)\r\n                    this.total = res.data.total\r\n                    this.systemCodes = res.data.rows\r\n                })\r\n            },\r\n            refresh () {\r\n                this.pageChange(1)\r\n            },\r\n            onPageSizeChange () {\r\n                console.log(this)\r\n            },\r\n            exportList () {\r\n                this.exportModel = true\r\n\r\n            },\r\n            cancel () {\r\n                this.exportModel = false\r\n            },\r\n            handleCheckAll () {\r\n                if (this.indeterminate) {\r\n                    this.checkAll = false;\r\n                } else {\r\n                    this.checkAll = !this.checkAll;\r\n                }\r\n                this.indeterminate = false;\r\n\r\n                if (this.checkAll) {\r\n                    forEach(this.tableColumns3, (item, index) => {\r\n                        this.checkedColums.push(index);\r\n                    })\r\n                } else {\r\n                    this.checkedColums = [];\r\n                }\r\n            },\r\n            checkColumChange (data) {\r\n                if (data.length === 3) {\r\n                    this.indeterminate = false;\r\n                    this.checkAll = true;\r\n                } else if (data.length > 0) {\r\n                    this.indeterminate = true;\r\n                    this.checkAll = false;\r\n                } else {\r\n                    this.indeterminate = false;\r\n                    this.checkAll = false;\r\n                }\r\n            },\r\n            formexport(url) {\r\n                let allColValueArr = '';\r\n                let allColNameArr = '';\r\n                for (var i = 0; i < this.checkedColums.length; i++) {\r\n                    if (this.tableColumns3[this.checkedColums[i]].key) {\r\n                        allColValueArr += this.tableColumns3[this.checkedColums[i]].key + ','\r\n                        allColNameArr += this.tableColumns3[this.checkedColums[i]].title + ','\r\n                    }\r\n                }\r\n               document.getElementById('exportHiddenForm').action = url;\r\n                document.getElementById('allColNames').value = encodeURI(allColNameArr);\r\n\t\t\t\tdocument.getElementById('allColValues').value =  encodeURI(allColValueArr);\r\n                console.log(this.$refs.exportHiddenForm, 8888)\r\n                document.getElementById('exportHiddenForm').submit();\r\n            },\r\n            exportForPDF () {\r\n                console.log(exportPdf())\r\n                this.formexport(exportPdf())\r\n            },\r\n            exportForEXCEL () {\r\n                this.formexport(exportExcel())\r\n            }\r\n        },\r\n        mounted() {\r\n            queryForPage({\r\n                page: this.currentPage, \r\n                rows: this.rows\r\n            }).then(res => {\r\n                console.log(res, 8888)\r\n                this.total = res.data.total\r\n                this.systemCodes = res.data.rows\r\n            })\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n  .ivu-form-inline .ivu-form-item {\r\n    width: 50%;\r\n    margin-right: 0;\r\n  }\r\n  .ivu-modal-footer {\r\n    text-align: center\r\n  }\r\n  .detail-form .ivu-form-item {\r\n    margin-bottom: 5px;\r\n    margin-left: 15%;\r\n    width: 35%;\r\n  }\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"src/view/system"}]}