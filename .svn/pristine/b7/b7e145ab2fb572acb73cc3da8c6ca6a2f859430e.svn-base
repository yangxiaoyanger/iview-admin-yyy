{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\components\\tree-select\\tree-select-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\components\\tree-select\\tree-select-tree.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Emitter from 'iview/src/mixins/emitter.js';\n\nvar arrayEqual = function arrayEqual(arr1, arr2) {\n  // 判断数组的长度\n  if (arr1.length !== arr2.length) {\n    return false;\n  } else {\n    // 循环遍历数组的值进行比较\n    for (var i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n};\n\nexport default {\n  name: 'TreeSelectTree',\n  mixins: [Emitter],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    selectedArray: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loadData: Function\n  },\n  data: function data() {\n    return {\n      flatDic: {},\n      checkedArray: []\n    };\n  },\n  inject: ['parent'],\n  computed: {\n    expandAll: function expandAll() {\n      return this.parent.$attrs['expand-all'];\n    }\n  },\n  watch: {\n    data: function data(newData, oldVal) {\n      var _this = this;\n\n      this.updateFlagDic(newData);\n      var selectArray = [];\n      this.selectedArray.forEach(function (id) {\n        if (id in _this.flatDic) selectArray.push(id);\n      });\n      this.$emit('on-check', selectArray.map(function (id) {\n        return _this.flatDic[id];\n      }));\n      if (this.expandAll) this.checkData(newData, false, true);\n    },\n    selectedArray: function selectedArray(newVal, oldVal) {\n      var _this2 = this;\n\n      if (arrayEqual(newVal, oldVal)) return;\n      var filtedNewVal = newVal.filter(function (id) {\n        return id in _this2.flatDic;\n      });\n      this.$emit('on-check', filtedNewVal.map(function (id) {\n        return _this2.flatDic[id];\n      }));\n      this.$emit('on-clear');\n      this.$nextTick(function () {\n        _this2.checkData(_this2.data, true);\n      });\n    }\n  },\n  methods: {\n    checkEmit: function checkEmit(value, label) {\n      this.dispatch('iSelect', 'on-select-selected', {\n        value: value,\n        label: label\n      });\n      this.$emit('on-select-selected', {\n        value: value,\n        label: label\n      });\n    },\n    updateFlagDic: function updateFlagDic(newData) {\n      var newFlagDic = {};\n      this.setFlagDic(newData, function (item) {\n        newFlagDic[item.id] = item;\n      });\n      this.flatDic = newFlagDic;\n    },\n    setFlagDic: function setFlagDic(data, callback) {\n      var _this3 = this;\n\n      data.forEach(function (item) {\n        if (item.children && item.children.length) {\n          _this3.setFlagDic(item.children, callback);\n        }\n\n        callback(item);\n      });\n    },\n    handleCheckSelect: function handleCheckSelect(selectArray, selectItem) {\n      this.$emit('on-check', selectArray);\n      this.parent.$emit('on-change', selectArray);\n    },\n    checkData: function checkData(data, emit, expandAll) {\n      var _this4 = this;\n\n      data.forEach(function (item) {\n        if (_this4.selectedArray.includes(item.id)) {\n          _this4.$set(item, 'checked', true);\n\n          _this4.checkedArray.push(item);\n\n          if (emit) _this4.checkEmit(item.id, item.title);\n        } else _this4.$set(item, 'checked', false);\n\n        if (item.children && item.children.length) {\n          if (_this4.expandAll && expandAll) _this4.$set(item, 'expand', true);\n\n          _this4.checkData(item.children, emit, expandAll);\n        }\n      });\n    },\n    loadDataCallback: function loadDataCallback(item, callback) {\n      var _this5 = this;\n\n      this.loadData(item, function (data) {\n        return function () {\n          callback(data);\n\n          _this5.updateFlagDic(_this5.data);\n        }(data);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    this.checkData(this.data, false, true);\n    this.$nextTick(function () {\n      _this6.$emit('on-check', _this6.checkedArray);\n    });\n  }\n};",{"version":3,"sources":["tree-select-tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Tree\n    :data=\"data\"\n    @on-check-change=\"handleCheckSelect\"\n    v-on=\"parent.$listeners\"\n    v-bind=\"parent.$attrs\"\n    :load-data=\"loadDataCallback\"\n    show-checkbox\n  ></Tree>\n</template>\n\n<script>\nimport Emitter from 'iview/src/mixins/emitter.js'\n\nconst arrayEqual = (arr1, arr2) => {\n  // 判断数组的长度\n  if (arr1.length !== arr2.length) {\n    return false\n  } else {\n    // 循环遍历数组的值进行比较\n    for (let i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\nexport default {\n  name: 'TreeSelectTree',\n  mixins: [Emitter],\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    selectedArray: {\n      type: Array,\n      default: () => []\n    },\n    loadData: Function\n  },\n  data () {\n    return {\n      flatDic: {},\n      checkedArray: []\n    }\n  },\n  inject: ['parent'],\n  computed: {\n    expandAll () {\n      return this.parent.$attrs['expand-all']\n    }\n  },\n  watch: {\n    data (newData, oldVal) {\n      this.updateFlagDic(newData)\n      let selectArray = []\n      this.selectedArray.forEach(id => {\n        if (id in this.flatDic) selectArray.push(id)\n      })\n      this.$emit('on-check', selectArray.map(id => this.flatDic[id]))\n      if (this.expandAll) this.checkData(newData, false, true)\n    },\n    selectedArray (newVal, oldVal) {\n      if (arrayEqual(newVal, oldVal)) return\n      const filtedNewVal = newVal.filter(id => id in this.flatDic)\n      this.$emit('on-check', filtedNewVal.map(id => this.flatDic[id]))\n      this.$emit('on-clear')\n      this.$nextTick(() => {\n        this.checkData(this.data, true)\n      })\n    }\n  },\n  methods: {\n    checkEmit (value, label) {\n      this.dispatch('iSelect', 'on-select-selected', {\n        value,\n        label\n      })\n      this.$emit('on-select-selected', {\n        value,\n        label\n      })\n    },\n    updateFlagDic (newData) {\n      let newFlagDic = {}\n      this.setFlagDic(newData, item => {\n        newFlagDic[item.id] = item\n      })\n      this.flatDic = newFlagDic\n    },\n    setFlagDic (data, callback) {\n      data.forEach(item => {\n        if (item.children && item.children.length) { this.setFlagDic(item.children, callback) }\n        callback(item)\n      })\n    },\n    handleCheckSelect (selectArray, selectItem) {\n      this.$emit('on-check', selectArray)\n      this.parent.$emit('on-change', selectArray)\n    },\n    checkData (data, emit, expandAll) {\n      data.forEach(item => {\n        if (this.selectedArray.includes(item.id)) {\n          this.$set(item, 'checked', true)\n          this.checkedArray.push(item)\n          if (emit) this.checkEmit(item.id, item.title)\n        } else this.$set(item, 'checked', false)\n        if (item.children && item.children.length) {\n          if (this.expandAll && expandAll) this.$set(item, 'expand', true)\n          this.checkData(item.children, emit, expandAll)\n        }\n      })\n    },\n    loadDataCallback (item, callback) {\n      this.loadData(item, data => {\n        return (() => {\n          callback(data)\n          this.updateFlagDic(this.data)\n        })(data)\n      })\n    }\n  },\n  mounted () {\n    this.checkData(this.data, false, true)\n    this.$nextTick(() => {\n      this.$emit('on-check', this.checkedArray)\n    })\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/components/tree-select"}]}