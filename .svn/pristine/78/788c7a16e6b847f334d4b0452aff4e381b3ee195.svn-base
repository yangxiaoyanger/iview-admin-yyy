{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\components\\main\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\components\\main\\main.vue","mtime":1562824530884},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\iview-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\iview-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from \"./components/side-menu\";\nimport HeaderBar from \"./components/header-bar\";\nimport customBreadCrumb from \"./components/custom-bread-crumb\";\nimport TagsNav from \"./components/tags-nav\";\nimport User from \"./components/user\";\nimport ABackTop from \"./components/a-back-top\";\nimport Fullscreen from \"./components/fullscreen\";\nimport Language from \"./components/language\";\nimport ErrorStore from \"./components/error-store\";\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, routeEqual, getFirstChildForMenuByRequest } from '@/libs/util';\nimport routers from '@/router/routers';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport \"./main.less\";\nimport { constants } from 'crypto';\nimport { stat } from 'fs';\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    customBreadCrumb: customBreadCrumb,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    ErrorStore: ErrorStore,\n    User: User,\n    ABackTop: ABackTop\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['errorCount']), {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    breadCrumbList: function breadCrumbList() {\n      return this.$store.state.app.breadCrumbList;\n    },\n    // sidemenuList () {\n    //   return this.$store.getters.sidemenuList\n    // },\n    // tagRouter () {\n    //   return this.$store.state.app.tagRouter\n    // },\n    userAvatar: function userAvatar() {\n      return this.$store.state.user.avatarImgPath;\n    },\n    cacheList: function cacheList() {\n      var list = ['ParentView'].concat(_toConsumableArray(this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : []));\n      return list;\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    },\n    hasReadErrorPage: function hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    },\n    unreadCount: function unreadCount() {\n      return this.$store.state.user.unreadCount;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal', 'setHomeRoute', 'closeTag', 'setSidemenuList']), mapActions(['handleLogin', 'getUnreadMessageCount', 'setNavMenu', 'setSidemenuList']), {\n    selectNav: function selectNav(name) {\n      this.setNavMenu(name);\n      this.setSidemenuList(name);\n      this.$router.push({\n        name: getFirstChildForMenuByRequest(this.$store.getters.routes, name).name\n      });\n      console.log(name, 'main.vue', this.$route.name);\n    }\n  }),\n  watch: {// '$route' (newRoute) {\n    //   const { name, query, params, meta } = newRoute\n    //   this.addTag({\n    //     route: { name, query, params, meta },\n    //     type: 'push'\n    //   })\n    //   console.log('main.vue $route', newRoute)\n    //   this.setBreadCrumb(newRoute)\n    //   this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n    //   this.$refs.sideMenu.updateOpenName(newRoute.name)\n    // }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    // this.setTagNavList()\n    // this.setHomeRoute(this.$route)\n    // const { name, params, query, meta } = this.$route\n    // this.addTag({\n    //   route: { name, params, query, meta }\n    // })\n    // this.setBreadCrumb(this.$route)\n    // 设置初始语言\n    this.setLocal(this.$i18n.locale); // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    } // 获取未读消息条数\n\n\n    this.getUnreadMessageCount();\n  }\n};",null]}