{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\iview-admin-master\\src\\libs\\forIE.js","dependencies":[{"path":"D:\\iview-admin-master\\src\\libs\\forIE.js","mtime":1562826961320},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var forIE = function (HTMLElement) {\n  // dataset 方法兼容 IE 浏览器。ie10及以下不支持dataset\n  if (HTMLElement) {\n    if (Object.getOwnPropertyNames(HTMLElement.prototype).indexOf('dataset') === -1) {\n      Object.defineProperty(HTMLElement.prototype, 'dataset', {\n        get: function get() {\n          var attributes = this.attributes; // 获取节点的所有属性\n\n          var name = [];\n          var value = []; // 定义两个数组保存属性名和属性值\n\n          var obj = {}; // 定义一个空对象\n\n          for (var i = 0; i < attributes.length; i++) {\n            // 遍历节点的所有属性\n            if (attributes[i].nodeName.slice(0, 5) === 'data-') {\n              // 如果属性名的前面5个字符符合\"data-\"\n              // 取出属性名的\"data-\"的后面的字符串放入name数组中\n              name.push(attributes[i].nodeName.slice(5)); // 取出对应的属性值放入value数组中\n\n              value.push(attributes[i].nodeValue);\n            }\n          }\n\n          for (var j = 0; j < name.length; j++) {\n            // 遍历name和value数组\n            obj[name[j]] = value[j]; // 将属性名和属性值保存到obj中\n          }\n\n          return obj; // 返回对象\n        }\n      });\n    }\n  }\n}(window.HTMLElement);\n\nexport { forIE };",{"version":3,"sources":["D:\\iview-admin-master\\src\\libs\\forIE.js"],"names":["forIE","HTMLElement","Object","getOwnPropertyNames","prototype","indexOf","defineProperty","get","attributes","name","value","obj","i","length","nodeName","slice","push","nodeValue","j","window"],"mappings":"AAAA,IAAMA,KAAK,GAAI,UAAUC,WAAV,EAAuB;AACpC;AACA,MAAIA,WAAJ,EAAiB;AACf,QAAIC,MAAM,CAACC,mBAAP,CAA2BF,WAAW,CAACG,SAAvC,EAAkDC,OAAlD,CAA0D,SAA1D,MAAyE,CAAC,CAA9E,EAAiF;AAC/EH,MAAAA,MAAM,CAACI,cAAP,CAAsBL,WAAW,CAACG,SAAlC,EAA6C,SAA7C,EAAwD;AACtDG,QAAAA,GAAG,EAAE,eAAY;AACf,cAAIC,UAAU,GAAG,KAAKA,UAAtB,CADe,CACkB;;AACjC,cAAIC,IAAI,GAAG,EAAX;AACA,cAAIC,KAAK,GAAG,EAAZ,CAHe,CAGA;;AACf,cAAIC,GAAG,GAAG,EAAV,CAJe,CAIF;;AACb,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAAE;AAC5C,gBAAIJ,UAAU,CAACI,CAAD,CAAV,CAAcE,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,MAAuC,OAA3C,EAAoD;AAAE;AACpD;AACAN,cAAAA,IAAI,CAACO,IAAL,CAAUR,UAAU,CAACI,CAAD,CAAV,CAAcE,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAV,EAFkD,CAGlD;;AACAL,cAAAA,KAAK,CAACM,IAAN,CAAWR,UAAU,CAACI,CAAD,CAAV,CAAcK,SAAzB;AACD;AACF;;AACD,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACI,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAAE;AACtCP,YAAAA,GAAG,CAACF,IAAI,CAACS,CAAD,CAAL,CAAH,GAAeR,KAAK,CAACQ,CAAD,CAApB,CADoC,CACZ;AACzB;;AACD,iBAAOP,GAAP,CAhBe,CAgBJ;AACZ;AAlBqD,OAAxD;AAoBD;AACF;AACF,CA1Ba,CA0BXQ,MAAM,CAAClB,WA1BI,CAAd;;AA4BA,SACED,KADF","sourcesContent":["const forIE = (function (HTMLElement) {\r\n  // dataset 方法兼容 IE 浏览器。ie10及以下不支持dataset\r\n  if (HTMLElement) {\r\n    if (Object.getOwnPropertyNames(HTMLElement.prototype).indexOf('dataset') === -1) {\r\n      Object.defineProperty(HTMLElement.prototype, 'dataset', {\r\n        get: function () {\r\n          var attributes = this.attributes // 获取节点的所有属性\r\n          var name = []\r\n          var value = [] // 定义两个数组保存属性名和属性值\r\n          var obj = {} // 定义一个空对象\r\n          for (var i = 0; i < attributes.length; i++) { // 遍历节点的所有属性\r\n            if (attributes[i].nodeName.slice(0, 5) === 'data-') { // 如果属性名的前面5个字符符合\"data-\"\r\n              // 取出属性名的\"data-\"的后面的字符串放入name数组中\r\n              name.push(attributes[i].nodeName.slice(5))\r\n              // 取出对应的属性值放入value数组中\r\n              value.push(attributes[i].nodeValue)\r\n            }\r\n          }\r\n          for (var j = 0; j < name.length; j++) { // 遍历name和value数组\r\n            obj[name[j]] = value[j] // 将属性名和属性值保存到obj中\r\n          }\r\n          return obj // 返回对象\r\n        }\r\n      })\r\n    }\r\n  }\r\n})(window.HTMLElement)\r\n\r\nexport {\r\n  forIE\r\n}\r\n"]}]}