{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\iview-admin-master\\src\\router\\index.js","dependencies":[{"path":"D:\\iview-admin-master\\src\\router\\index.js","mtime":1562054379834},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from \"./routers\";\nimport store from '@/store';\nimport iView from 'iview';\nimport { setToken, getToken, canTurnTo, setTitle, setRouterInLocalstorage, getRouterFromLocalstorage } from '@/libs/util';\nimport config from '@/config';\nvar homeName = config.homeName;\nvar getRouter;\nVue.use(Router);\nvar router = new Router({\n  routes: routes,\n  mode: 'history'\n});\nvar LOGIN_PAGE_NAME = 'login';\n\nvar turnTo = function turnTo(to, access, next) {\n  if (canTurnTo(to.name, access, routes)) next(); // 有权限，可访问\n  else next({\n      replace: true,\n      name: 'error_401'\n    }); // 无权限，重定向到401页面\n};\n\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    console.log('未登录且要跳转的页面不是登录页');\n    store.dispatch('getPublicKey').then(function (user) {\n      next({\n        name: LOGIN_PAGE_NAME // 跳转到登录页\n\n      });\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    console.log('未登陆且要跳转的页面是登录页'); // 未登陆且要跳转的页面是登录页\n\n    store.dispatch('getPublicKey').then(function (user) {\n      next(); // 跳转\n    });\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    console.log('已登录且要跳转的页面是登录页');\n    next({\n      name: homeName // 跳转到homeName页\n\n    });\n  } else {\n    if (!getRouter) {\n      if (!store.state.user.routes) {\n        store.dispatch('getNav').then(function (res) {\n          getRouter = res;\n          router.options.routes = getRouter; // 必须在addroutes前，使用router.options.routes=XXXXX的方法手动添加\n\n          router.addRoutes(getRouter); // 动态添加路由\n\n          next({\n            name: homeName\n          });\n        });\n      } else {\n        getRouter = store.state.user.routes;\n        next();\n      }\n    } else {\n      next();\n    } // if (store.state.user.hasGetInfo) {\n    //   console.log('store.state.user.hasGetInfo', store.state.user.hasGetInfo)\n    //   turnTo(to, store.state.user.access, next)\n    // } else {\n    //   // store.dispatch('getUserInfo').then(user => {\n    //   //   // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n    //   //   console.log('router index.js getUserInfo', router)\n    //   //   // next({\n    //   //   //   name: homeName // 跳转到homeName页\n    //   //   // })\n    //   //   // turnTo(to, user.access, next)\n    //   // }).catch(() => {\n    //   //   console.log('router index.js catch')\n    //   //   setToken('')\n    //   //   // localSave('router', '')\n    //   //   // next({\n    //   //   //   name: 'login'\n    //   //   // })\n    //   // })\n    // }\n\n  }\n});\nrouter.afterEach(function (to) {\n  setTitle(to, router.app);\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["D:\\iview-admin-master\\src\\router\\index.js"],"names":["Vue","Router","routes","store","iView","setToken","getToken","canTurnTo","setTitle","setRouterInLocalstorage","getRouterFromLocalstorage","config","homeName","getRouter","use","router","mode","LOGIN_PAGE_NAME","turnTo","to","access","next","name","replace","beforeEach","from","LoadingBar","start","token","console","log","dispatch","then","user","state","res","options","addRoutes","afterEach","app","finish","window","scrollTo"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport routes from './routers'\nimport store from '@/store'\nimport iView from 'iview'\nimport { setToken, getToken, canTurnTo, setTitle, setRouterInLocalstorage, getRouterFromLocalstorage } from '@/libs/util'\nimport config from '@/config'\nconst { homeName } = config\nvar getRouter\n\nVue.use(Router)\nconst router = new Router({\n  routes,\n  mode: 'history'\n})\nconst LOGIN_PAGE_NAME = 'login'\n\nconst turnTo = (to, access, next) => {\n  if (canTurnTo(to.name, access, routes)) next() // 有权限，可访问\n  else next({ replace: true, name: 'error_401' }) // 无权限，重定向到401页面\n}\n\nrouter.beforeEach((to, from, next) => {\n  iView.LoadingBar.start()\n  const token = getToken()\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    console.log('未登录且要跳转的页面不是登录页')\n    store.dispatch('getPublicKey').then(user => {\n      next({\n        name: LOGIN_PAGE_NAME // 跳转到登录页\n      })\n    })\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    console.log('未登陆且要跳转的页面是登录页')\n    // 未登陆且要跳转的页面是登录页\n    store.dispatch('getPublicKey').then(user => {\n      next() // 跳转\n    })\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    console.log('已登录且要跳转的页面是登录页')\n    next({\n      name: homeName // 跳转到homeName页\n    })\n  } else {\n    if (!getRouter) {\n      if (!store.state.user.routes) {\n        store.dispatch('getNav').then(res => {\n          getRouter = res\n          router.options.routes = getRouter // 必须在addroutes前，使用router.options.routes=XXXXX的方法手动添加\n          router.addRoutes(getRouter) // 动态添加路由\n          next({\n            name: homeName\n          })\n        })\n      } else {\n        getRouter = store.state.user.routes\n        next()\n      }\n    } else {\n      next()\n    }\n    // if (store.state.user.hasGetInfo) {\n    //   console.log('store.state.user.hasGetInfo', store.state.user.hasGetInfo)\n    //   turnTo(to, store.state.user.access, next)\n    // } else {\n    //   // store.dispatch('getUserInfo').then(user => {\n    //   //   // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n    //   //   console.log('router index.js getUserInfo', router)\n    //   //   // next({\n    //   //   //   name: homeName // 跳转到homeName页\n    //   //   // })\n    //   //   // turnTo(to, user.access, next)\n    //   // }).catch(() => {\n    //   //   console.log('router index.js catch')\n    //   //   setToken('')\n    //   //   // localSave('router', '')\n    //   //   // next({\n    //   //   //   name: 'login'\n    //   //   // })\n    //   // })\n    // }\n  }\n})\n\nrouter.afterEach(to => {\n  setTitle(to, router.app)\n  iView.LoadingBar.finish()\n  window.scrollTo(0, 0)\n})\n\nexport default router\n"]}]}