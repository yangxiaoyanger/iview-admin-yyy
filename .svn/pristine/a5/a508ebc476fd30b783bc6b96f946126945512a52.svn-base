{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\components\\cropper\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\components\\cropper\\index.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Cropper from 'cropperjs';\nimport \"./index.less\";\nimport 'cropperjs/dist/cropper.min.css';\nexport default {\n  name: 'Cropper',\n  props: {\n    src: {\n      type: String,\n      default: ''\n    },\n    preview: {\n      type: Boolean,\n      default: true\n    },\n    moveStep: {\n      type: Number,\n      default: 4\n    },\n    cropButtonText: {\n      type: String,\n      default: '裁剪'\n    }\n  },\n  data: function data() {\n    return {\n      cropper: null,\n      insideSrc: ''\n    };\n  },\n  computed: {\n    imgId: function imgId() {\n      return \"cropper\".concat(this._uid);\n    },\n    previewId: function previewId() {\n      return \"cropper_preview\".concat(this._uid);\n    }\n  },\n  watch: {\n    src: function src(_src) {\n      this.replace(_src);\n    },\n    insideSrc: function insideSrc(src) {\n      this.replace(src);\n    }\n  },\n  methods: {\n    beforeUpload: function beforeUpload(file) {\n      var _this = this;\n\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function (event) {\n        _this.insideSrc = event.srcElement.result;\n      };\n\n      return false;\n    },\n    replace: function replace(src) {\n      this.cropper.replace(src);\n      this.insideSrc = src;\n    },\n    rotate: function rotate() {\n      this.cropper.rotate(90);\n    },\n    shrink: function shrink() {\n      this.cropper.zoom(-0.1);\n    },\n    magnify: function magnify() {\n      this.cropper.zoom(0.1);\n    },\n    scale: function scale(d) {\n      this.cropper[\"scale\".concat(d)](-this.cropper.getData()[\"scale\".concat(d)]);\n    },\n    move: function move() {\n      var _this$cropper;\n\n      (_this$cropper = this.cropper).move.apply(_this$cropper, arguments);\n    },\n    crop: function crop() {\n      var _this2 = this;\n\n      this.cropper.getCroppedCanvas().toBlob(function (blob) {\n        _this2.$emit('on-crop', blob);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      var dom = document.getElementById(_this3.imgId);\n      _this3.cropper = new Cropper(dom, {\n        preview: \"#\".concat(_this3.previewId),\n        checkCrossOrigin: true\n      });\n    });\n  }\n};",null]}