{"remainingRequest":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\components\\tree-select\\tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\components\\tree-select\\tree-select.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Emitter from 'iview/src/mixins/emitter'\nimport TreeSelectTreeItem from './tree-select-tree.vue'\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    data: {\n      type: Array,\n      default: () => []\n    },\n    loadData: Function\n  },\n  data () {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    }\n  },\n  provide () {\n    return {\n      parent: this\n    }\n  },\n  methods: {\n    handleChange (selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected)\n      this.isChangedByTree = false\n    },\n    handleTreeCheck (selectedArray) {\n      this.isChangedByTree = true\n      this.$emit('input', selectedArray.map(item => item.id))\n    },\n    handleClear () {\n      this.$refs.select.reset()\n    }\n  }\n}\n",{"version":3,"sources":["tree-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tree-select.vue","sourceRoot":"src/components/tree-select","sourcesContent":["<template>\n  <Select\n    ref=\"select\"\n    class=\"tree-select\"\n    v-bind=\"$attrs\"\n    @on-change=\"handleChange\"\n    multiple\n  >\n    <tree-select-tree-item\n      :selectedArray=\"value\"\n      :data=\"data\"\n      @on-clear=\"handleClear\"\n      :load-data=\"loadData\"\n      @on-check=\"handleTreeCheck\"\n    ></tree-select-tree-item>\n  </Select>\n</template>\n\n<script>\nimport Emitter from 'iview/src/mixins/emitter'\nimport TreeSelectTreeItem from './tree-select-tree.vue'\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    data: {\n      type: Array,\n      default: () => []\n    },\n    loadData: Function\n  },\n  data () {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    }\n  },\n  provide () {\n    return {\n      parent: this\n    }\n  },\n  methods: {\n    handleChange (selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected)\n      this.isChangedByTree = false\n    },\n    handleTreeCheck (selectedArray) {\n      this.isChangedByTree = true\n      this.$emit('input', selectedArray.map(item => item.id))\n    },\n    handleClear () {\n      this.$refs.select.reset()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.tree-select {\n  .ivu-select-dropdown {\n    padding: 0 6px;\n  }\n}\n</style>\n"]}]}