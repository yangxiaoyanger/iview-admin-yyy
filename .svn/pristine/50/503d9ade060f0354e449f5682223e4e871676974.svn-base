{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue","mtime":1562815615790},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      tableData3: [{\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }, {\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }],\n      showBorder: false,\n      showStripe: false,\n      showHeader: true,\n      showIndex: true,\n      showCheckbox: false,\n      fixedHeader: false,\n      tableSize: 'default',\n      pageStyle: {\n        marginTop: '20px'\n      },\n      detailModel: false,\n      editModel: false,\n      editFormValidate: {\n        name: '',\n        mail: '',\n        city: '',\n        gender: '',\n        interest: [],\n        date: '',\n        time: '',\n        desc: ''\n      },\n      detailFormValidate: {},\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: 'The name cannot be empty',\n          trigger: 'blur'\n        }],\n        mail: [{\n          required: true,\n          message: 'Mailbox cannot be empty',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Incorrect email format',\n          trigger: 'blur'\n        }],\n        city: [{\n          required: true,\n          message: 'Please select the city',\n          trigger: 'change'\n        }],\n        gender: [{\n          required: true,\n          message: 'Please select gender',\n          trigger: 'change'\n        }],\n        interest: [{\n          required: true,\n          type: 'array',\n          min: 1,\n          message: 'Choose at least one hobby',\n          trigger: 'change'\n        }, {\n          type: 'array',\n          max: 2,\n          message: 'Choose two hobbies at best',\n          trigger: 'change'\n        }],\n        date: [{\n          required: true,\n          type: 'date',\n          message: 'Please select the date',\n          trigger: 'change'\n        }],\n        time: [{\n          required: true,\n          type: 'string',\n          message: 'Please select time',\n          trigger: 'change'\n        }],\n        desc: [{\n          required: true,\n          message: 'Please enter a personal introduction',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 20,\n          message: 'Introduce no less than 20 words',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    tableColumns3: function tableColumns3() {\n      var _this = this;\n\n      var columns = [];\n\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      if (this.showIndex) {\n        columns.push({\n          type: 'index',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      columns.push({\n        title: 'Date',\n        key: 'date',\n        sortable: true,\n        fixed: 'left'\n      });\n      columns.push({\n        title: 'Name',\n        key: 'name'\n      });\n      columns.push({\n        title: 'Age',\n        key: 'age',\n        sortable: true,\n        filters: [{\n          label: 'Greater than 25',\n          value: 1\n        }, {\n          label: 'Less than 25',\n          value: 2\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 1) {\n            return row.age > 25;\n          } else if (value === 2) {\n            return row.age < 25;\n          }\n        }\n      });\n      columns.push({\n        title: 'Address',\n        key: 'address',\n        filters: [{\n          label: 'New York',\n          value: 'New York'\n        }, {\n          label: 'London',\n          value: 'London'\n        }, {\n          label: 'Sydney',\n          value: 'Sydney'\n        }],\n        filterMethod: function filterMethod(value, row) {\n          return row.address.indexOf(value) > -1;\n        }\n      });\n      columns.push({\n        title: 'Action',\n        key: 'action',\n        width: 350,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'info',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.show(params.index);\n              }\n            }\n          }, '详情'), h('Button', {\n            props: {\n              type: 'error',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.index);\n              }\n            }\n          }, '删除'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.index);\n              }\n            }\n          }, '编辑')]);\n        }\n      });\n      return columns;\n    }\n  },\n  methods: {\n    show: function show(index) {\n      this.detailModel = true;\n    },\n    remove: function remove(index) {\n      this.tableData3.splice(index, 1);\n    },\n    edit: function edit(index) {\n      this.editModel = true;\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this2 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this2.$Message.success('Success!');\n        } else {\n          _this2.$Message.error('Fail!');\n        }\n      });\n    },\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n    }\n  }\n};",null]}