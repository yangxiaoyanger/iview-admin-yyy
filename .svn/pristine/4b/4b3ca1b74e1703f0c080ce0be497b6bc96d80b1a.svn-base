{"remainingRequest":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\single-page\\message\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\single-page\\message\\index.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"D:\\\\iview-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\nvar listDic = {\n  unread: 'messageUnreadList',\n  readed: 'messageReadedList',\n  trash: 'messageTrashList'\n};\nexport default {\n  name: 'message_page',\n  data: function data() {\n    return {\n      listLoading: true,\n      contentLoading: false,\n      currentMessageType: 'unread',\n      messageContent: '',\n      showingMsgItem: {}\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    messageUnreadList: function messageUnreadList(state) {\n      return state.user.messageUnreadList;\n    },\n    messageReadedList: function messageReadedList(state) {\n      return state.user.messageReadedList;\n    },\n    messageTrashList: function messageTrashList(state) {\n      return state.user.messageTrashList;\n    },\n    messageList: function messageList() {\n      return this[listDic[this.currentMessageType]];\n    },\n    titleClass: function titleClass() {\n      return {\n        'not-unread-list': this.currentMessageType !== 'unread'\n      };\n    }\n  }), mapGetters(['messageUnreadCount', 'messageReadedCount', 'messageTrashCount'])),\n  methods: _objectSpread({}, mapMutations([//\n  ]), mapActions(['getContentByMsgId', 'getMessageList', 'hasRead', 'removeReaded', 'restoreTrash']), {\n    stopLoading: function stopLoading(name) {\n      this[name] = false;\n    },\n    handleSelect: function handleSelect(name) {\n      this.currentMessageType = name;\n    },\n    handleView: function handleView(msg_id) {\n      var _this = this;\n\n      this.contentLoading = true;\n      this.getContentByMsgId({\n        msg_id: msg_id\n      }).then(function (content) {\n        _this.messageContent = content;\n\n        var item = _this.messageList.find(function (item) {\n          return item.msg_id === msg_id;\n        });\n\n        if (item) _this.showingMsgItem = item;\n        if (_this.currentMessageType === 'unread') _this.hasRead({\n          msg_id: msg_id\n        });\n\n        _this.stopLoading('contentLoading');\n      }).catch(function () {\n        _this.stopLoading('contentLoading');\n      });\n    },\n    removeMsg: function removeMsg(item) {\n      item.loading = true;\n      var msg_id = item.msg_id;\n      if (this.currentMessageType === 'readed') this.removeReaded({\n        msg_id: msg_id\n      });else this.restoreTrash({\n        msg_id: msg_id\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.listLoading = true; // 请求获取消息列表\n\n    this.getMessageList().then(function () {\n      return _this2.stopLoading('listLoading');\n    }).catch(function () {\n      return _this2.stopLoading('listLoading');\n    });\n  }\n};",null]}