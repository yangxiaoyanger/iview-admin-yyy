{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\view\\components\\demotable\\demotable.vue","mtime":1564972422464},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      tableData3: [{\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }, {\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }],\n      showBorder: false,\n      showStripe: false,\n      showHeader: true,\n      showIndex: true,\n      showCheckbox: false,\n      fixedHeader: false,\n      tableSize: 'default',\n      pageStyle: {\n        marginTop: '20px'\n      },\n      detailModel: false,\n      editModel: false,\n      editFormValidate: {\n        name: '',\n        mail: '',\n        city: '',\n        gender: '',\n        interest: [],\n        date: '',\n        time: '',\n        desc: ''\n      },\n      detailFormValidate: {},\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: 'The name cannot be empty',\n          trigger: 'blur'\n        }],\n        mail: [{\n          required: true,\n          message: 'Mailbox cannot be empty',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Incorrect email format',\n          trigger: 'blur'\n        }],\n        city: [{\n          required: true,\n          message: 'Please select the city',\n          trigger: 'change'\n        }],\n        gender: [{\n          required: true,\n          message: 'Please select gender',\n          trigger: 'change'\n        }],\n        interest: [{\n          required: true,\n          type: 'array',\n          min: 1,\n          message: 'Choose at least one hobby',\n          trigger: 'change'\n        }, {\n          type: 'array',\n          max: 2,\n          message: 'Choose two hobbies at best',\n          trigger: 'change'\n        }],\n        date: [{\n          required: true,\n          type: 'date',\n          message: 'Please select the date',\n          trigger: 'change'\n        }],\n        time: [{\n          required: true,\n          type: 'string',\n          message: 'Please select time',\n          trigger: 'change'\n        }],\n        desc: [{\n          required: true,\n          message: 'Please enter a personal introduction',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 20,\n          message: 'Introduce no less than 20 words',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    tableColumns3: function tableColumns3() {\n      var _this = this;\n\n      var columns = [];\n\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      if (this.showIndex) {\n        columns.push({\n          type: 'index',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      columns.push({\n        title: 'Date',\n        key: 'date',\n        sortable: true,\n        fixed: 'left'\n      });\n      columns.push({\n        title: 'Name',\n        key: 'name'\n      });\n      columns.push({\n        title: 'Age',\n        key: 'age',\n        sortable: true,\n        filters: [{\n          label: 'Greater than 25',\n          value: 1\n        }, {\n          label: 'Less than 25',\n          value: 2\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 1) {\n            return row.age > 25;\n          } else if (value === 2) {\n            return row.age < 25;\n          }\n        }\n      });\n      columns.push({\n        title: 'Address',\n        key: 'address',\n        filters: [{\n          label: 'New York',\n          value: 'New York'\n        }, {\n          label: 'London',\n          value: 'London'\n        }, {\n          label: 'Sydney',\n          value: 'Sydney'\n        }],\n        filterMethod: function filterMethod(value, row) {\n          return row.address.indexOf(value) > -1;\n        }\n      });\n      columns.push({\n        title: 'Action',\n        key: 'action',\n        width: 350,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'info',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.show(params.index);\n              }\n            }\n          }, '详情'), h('Button', {\n            props: {\n              type: 'error',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.index);\n              }\n            }\n          }, '删除'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.index);\n              }\n            }\n          }, '编辑')]);\n        }\n      });\n      return columns;\n    }\n  },\n  methods: {\n    show: function show(index) {\n      this.detailModel = true;\n    },\n    remove: function remove(index) {\n      this.tableData3.splice(index, 1);\n    },\n    edit: function edit(index) {\n      this.editModel = true;\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this2 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this2.$Message.success('Success!');\n        } else {\n          _this2.$Message.error('Fail!');\n        }\n      });\n    },\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n    }\n  }\n};",{"version":3,"sources":["demotable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <Card shadow>\n        <div>\n            <div style=\"margin: 10px\">\n                Display border <i-switch v-model=\"showBorder\" style=\"margin-right: 5px\"></i-switch>\n                Display stripe <i-switch v-model=\"showStripe\" style=\"margin-right: 5px\"></i-switch>\n                Display index <i-switch v-model=\"showIndex\" style=\"margin-right: 5px\"></i-switch>\n                Display multi choice <i-switch v-model=\"showCheckbox\" style=\"margin-right: 5px\"></i-switch>\n                Display header <i-switch v-model=\"showHeader\" style=\"margin-right: 5px\"></i-switch>\n                Table scrolling <i-switch v-model=\"fixedHeader\" style=\"margin-right: 5px\"></i-switch>\n                <br>\n                <br>\n                Table size\n                <Radio-group v-model=\"tableSize\" type=\"button\">\n                    <Radio label=\"large\">large</Radio>\n                    <Radio label=\"default\">medium(default)</Radio>\n                    <Radio label=\"small\">small</Radio>\n                </Radio-group>\n                <div class=\"button-group pull-right\">\n                    <Button>Default</Button>\n                    <Button type=\"primary\">Primary</Button>\n                    <Button type=\"dashed\">Dashed</Button>\n                    <Button type=\"text\">Text</Button>\n\n                    <Button type=\"info\">Info</Button>\n                    <Button type=\"success\">Success</Button>\n                    <Button type=\"warning\">Warning</Button>\n                    <Button type=\"error\">Error</Button>\n                    <br><br>\n                </div>\n                <div class=\"clear-fix\"></div>\n                \n                \n            </div>\n            <Table :border=\"showBorder\" :stripe=\"showStripe\" :show-header=\"showHeader\" \n            :height=\"fixedHeader ? 250 : ''\" :size=\"tableSize\" :data=\"tableData3\" :columns=\"tableColumns3\"></Table>\n            <Page :total=\"100\" show-sizer show-elevator show-total :styles=\"pageStyle\"/>\n\n            <Modal v-model=\"editModel\" draggable scrollable width=\"70\">\n                <p slot=\"header\">\n                    <span>编辑弹窗</span>\n                </p>\n                <Form ref=\"editFormValidate\" :model=\"editFormValidate\" :rules=\"ruleValidate\" :label-width=\"80\" inline>\n                    <FormItem label=\"Name\" prop=\"name\">\n                        <Input v-model=\"editFormValidate.name\" placeholder=\"Enter your name\"></Input>\n                    </FormItem>\n                    <FormItem label=\"E-mail\" prop=\"mail\">\n                        <Input v-model=\"editFormValidate.mail\" placeholder=\"Enter your e-mail\"></Input>\n                    </FormItem>\n                    <FormItem label=\"City\" prop=\"city\">\n                        <Select v-model=\"editFormValidate.city\" placeholder=\"Select your city\">\n                            <Option value=\"beijing\">New York</Option>\n                            <Option value=\"shanghai\">London</Option>\n                            <Option value=\"shenzhen\">Sydney</Option>\n                        </Select>\n                    </FormItem>\n                    <FormItem label=\"Date\">\n                        <Row>\n                            <Col span=\"11\">\n                                <FormItem prop=\"date\">\n                                    <DatePicker type=\"date\" placeholder=\"Select date\" v-model=\"editFormValidate.date\"></DatePicker>\n                                </FormItem>\n                            </Col>\n                            <Col span=\"2\" style=\"text-align: center\">-</Col>\n                            <Col span=\"11\">\n                                <FormItem prop=\"time\">\n                                    <TimePicker type=\"time\" placeholder=\"Select time\" v-model=\"editFormValidate.time\"></TimePicker>\n                                </FormItem>\n                            </Col>\n                        </Row>\n                    </FormItem>\n                    <FormItem label=\"Gender\" prop=\"gender\">\n                        <RadioGroup v-model=\"editFormValidate.gender\">\n                            <Radio label=\"male\">Male</Radio>\n                            <Radio label=\"female\">Female</Radio>\n                        </RadioGroup>\n                    </FormItem>\n                    <FormItem label=\"Hobby\" prop=\"interest\">\n                        <CheckboxGroup v-model=\"editFormValidate.interest\">\n                            <Checkbox label=\"Eat\"></Checkbox>\n                            <Checkbox label=\"Sleep\"></Checkbox>\n                            <Checkbox label=\"Run\"></Checkbox>\n                            <Checkbox label=\"Movie\"></Checkbox>\n                        </CheckboxGroup>\n                    </FormItem>\n                    <FormItem label=\"Desc\" prop=\"desc\" style=\"width: 100%;\">\n                        <Input v-model=\"editFormValidate.desc\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\" placeholder=\"Enter something...\"></Input>\n                    </FormItem>\n                    <!-- <FormItem>\n                        <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">Submit</Button>\n                        <Button @click=\"handleReset('formValidate')\" style=\"margin-left: 8px\">Reset</Button>\n                    </FormItem> -->\n                </Form>\n                <div slot=\"footer\">\n                    <Button type=\"primary\" @click=\"handleSubmit('editFormValidate')\">确定</Button>\n                    <Button @click=\"handleReset('editFormValidate')\" style=\"margin-left: 8px\">重置</Button>\n                </div>\n            </Modal>\n\n            <Modal v-model=\"detailModel\" draggable scrollable width=\"60\">\n                <p slot=\"header\">\n                    <span>详情弹窗</span>\n                </p>\n                <Form ref=\"detailFormValidate\" :model=\"detailFormValidate\"  :label-width=\"80\" inline class=\"detail-form\">\n                    <FormItem label=\"Name\" prop=\"name\">\n                        Enter your name\n                    </FormItem>\n                    <FormItem label=\"E-mail\" prop=\"mail\">\n                        Enter your e-mail\n                    </FormItem>\n                    <FormItem label=\"City\" prop=\"city\">\n                        Enter your e-mail\n                    </FormItem>\n                    <FormItem label=\"Date\">\n                        Enter your e-mail\n                    </FormItem>\n                    <FormItem label=\"Gender\" prop=\"gender\">\n                        Gender\n                    </FormItem>\n                    <FormItem label=\"Hobby\" prop=\"interest\">\n                        Gender\n                    </FormItem>\n                    <FormItem label=\"Desc\" prop=\"desc\">\n                        Gender\n                    </FormItem>\n            </Form>\n            <!-- <div slot=\"footer\">\n                <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">确定</Button>\n                <Button @click=\"handleReset('formValidate')\" style=\"margin-left: 8px\">重置</Button>\n            </div> -->\n            </Modal>\n        </div>\n    </Card>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                tableData3: [\n                    {\n                        name: 'John Brown',\n                        age: 18,\n                        address: 'New York No. 1 Lake Park',\n                        date: '2016-10-03'\n                    },\n                    {\n                        name: 'Jim Green',\n                        age: 24,\n                        address: 'London No. 1 Lake Park',\n                        date: '2016-10-01'\n                    },\n                    {\n                        name: 'Joe Black',\n                        age: 30,\n                        address: 'Sydney No. 1 Lake Park',\n                        date: '2016-10-02'\n                    },\n                    {\n                        name: 'Jon Snow',\n                        age: 26,\n                        address: 'Ottawa No. 2 Lake Park',\n                        date: '2016-10-04'\n                    },\n                    {\n                        name: 'John Brown',\n                        age: 18,\n                        address: 'New York No. 1 Lake Park',\n                        date: '2016-10-03'\n                    },\n                    {\n                        name: 'Jim Green',\n                        age: 24,\n                        address: 'London No. 1 Lake Park',\n                        date: '2016-10-01'\n                    },\n                    {\n                        name: 'Joe Black',\n                        age: 30,\n                        address: 'Sydney No. 1 Lake Park',\n                        date: '2016-10-02'\n                    },\n                    {\n                        name: 'Jon Snow',\n                        age: 26,\n                        address: 'Ottawa No. 2 Lake Park',\n                        date: '2016-10-04'\n                    }\n                ],\n                showBorder: false,\n                showStripe: false,\n                showHeader: true,\n                showIndex: true,\n                showCheckbox: false,\n                fixedHeader: false,\n                tableSize: 'default',\n                pageStyle: {\n                  marginTop: '20px'\n                },\n                detailModel: false,\n                editModel: false,\n                editFormValidate: {\n                    name: '',\n                    mail: '',\n                    city: '',\n                    gender: '',\n                    interest: [],\n                    date: '',\n                    time: '',\n                    desc: ''\n                },\n                detailFormValidate: {},\n                ruleValidate: {\n                    name: [\n                        { required: true, message: 'The name cannot be empty', trigger: 'blur' }\n                    ],\n                    mail: [\n                        { required: true, message: 'Mailbox cannot be empty', trigger: 'blur' },\n                        { type: 'email', message: 'Incorrect email format', trigger: 'blur' }\n                    ],\n                    city: [\n                        { required: true, message: 'Please select the city', trigger: 'change' }\n                    ],\n                    gender: [\n                        { required: true, message: 'Please select gender', trigger: 'change' }\n                    ],\n                    interest: [\n                        { required: true, type: 'array', min: 1, message: 'Choose at least one hobby', trigger: 'change' },\n                        { type: 'array', max: 2, message: 'Choose two hobbies at best', trigger: 'change' }\n                    ],\n                    date: [\n                        { required: true, type: 'date', message: 'Please select the date', trigger: 'change' }\n                    ],\n                    time: [\n                        { required: true, type: 'string', message: 'Please select time', trigger: 'change' }\n                    ],\n                    desc: [\n                        { required: true, message: 'Please enter a personal introduction', trigger: 'blur' },\n                        { type: 'string', min: 20, message: 'Introduce no less than 20 words', trigger: 'blur' }\n                    ]\n                }\n            }\n        },\n        computed: {\n            tableColumns3 () {\n                let columns = [];\n                if (this.showCheckbox) {\n                    columns.push({\n                        type: 'selection',\n                        width: 60,\n                        align: 'center'\n                    })\n                }\n                if (this.showIndex) {\n                    columns.push({\n                        type: 'index',\n                        width: 60,\n                        align: 'center'\n                    })\n                }\n                columns.push({\n                    title: 'Date',\n                    key: 'date',\n                    sortable: true,\n                    fixed: 'left'\n                });\n                columns.push({\n                    title: 'Name',\n                    key: 'name'\n                });\n                columns.push({\n                    title: 'Age',\n                    key: 'age',\n                    sortable: true,\n                    filters: [\n                        {\n                            label: 'Greater than 25',\n                            value: 1\n                        },\n                        {\n                            label: 'Less than 25',\n                            value: 2\n                        }\n                    ],\n                    filterMultiple: false,\n                    filterMethod (value, row) {\n                        if (value === 1) {\n                            return row.age > 25;\n                        } else if (value === 2) {\n                            return row.age < 25;\n                        }\n                    }\n                });\n                columns.push({\n                    title: 'Address',\n                    key: 'address',\n                    filters: [\n                        {\n                            label: 'New York',\n                            value: 'New York'\n                        },\n                        {\n                            label: 'London',\n                            value: 'London'\n                        },\n                        {\n                            label: 'Sydney',\n                            value: 'Sydney'\n                        }\n                    ],\n                    filterMethod (value, row) {\n                        return row.address.indexOf(value) > -1;\n                    }\n                });\n                columns.push({\n                    title: 'Action',\n                    key: 'action',\n                    width: 350,\n                    align: 'center',\n                    render: (h, params) => {\n                        return h('div', [\n                            h('Button', {\n                                props: {\n                                    type: 'info',\n                                    size: 'small'\n                                },\n                                style: {\n                                    marginRight: '5px'\n                                },\n                                on: {\n                                    click: () => {\n                                        this.show(params.index)\n                                    }\n                                }\n                            }, '详情'),\n                            h('Button', {\n                                props: {\n                                    type: 'error',\n                                    size: 'small'\n                                },\n                                style: {\n                                    marginRight: '5px'\n                                },\n                                on: {\n                                    click: () => {\n                                        this.remove(params.index)\n                                    }\n                                }\n                            }, '删除'),\n                            h('Button', {\n                                props: {\n                                    type: 'primary',\n                                    size: 'small'\n                                },\n                                on: {\n                                    click: () => {\n                                        this.edit(params.index)\n                                    }\n                                }\n                            }, '编辑')\n                        ]);\n                    }\n                });\n                return columns;\n            }\n        },\n        methods: {\n            show (index) {\n                this.detailModel = true;\n            },\n            remove (index) {\n                this.tableData3.splice(index, 1);\n            },\n            edit (index) {\n              this.editModel = true;\n            },\n            handleSubmit (name) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        this.$Message.success('Success!');\n                    } else {\n                        this.$Message.error('Fail!');\n                    }\n                })\n            },\n            handleReset (name) {\n                this.$refs[name].resetFields();\n            }\n        }\n    }\n</script>\n<style>\n  .ivu-form-inline .ivu-form-item {\n    width: 50%;\n    margin-right: 0;\n  }\n  .ivu-modal-footer {\n    text-align: center\n  }\n  .detail-form .ivu-form-item {\n    margin-bottom: 5px;\n    margin-left: 15%;\n    width: 35%;\n  }\n</style>\n\n\n\n\n\n"],"sourceRoot":"src/view/components/demotable"}]}