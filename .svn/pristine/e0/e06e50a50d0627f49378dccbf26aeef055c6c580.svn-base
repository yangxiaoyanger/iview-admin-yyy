{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\iview-admin-master\\src\\libs\\util.js","dependencies":[{"path":"D:\\iview-admin-master\\src\\libs\\util.js","mtime":1563414334997},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"D:\\\\iview-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\iview-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport Cookies from 'js-cookie'; // cookie保存的天数\n\nimport config from '@/config';\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools'; // 获取组件的方法\n\nimport Main from '@/components/main';\nimport parentView from '@/components/parent-view';\nvar title = config.title,\n    cookieExpires = config.cookieExpires,\n    useI18n = config.useI18n;\n\nvar _import = require('../router/_import_' + process.env.NODE_ENV); // Layout 是架构组件，不在后台返回，在文件里单独引入\n\n\nexport var TOKEN_KEY = 'token';\nexport var setToken = function setToken(token) {\n  Cookies.set(TOKEN_KEY, token, {\n    expires: cookieExpires || 1\n  });\n};\nexport var getToken = function getToken() {\n  var token = Cookies.get(TOKEN_KEY);\n  if (token) return token;else return false;\n};\nexport var hasChild = function hasChild(item) {\n  return item.children && item.children.length !== 0;\n};\n\nvar showThisMenuEle = function showThisMenuEle(item, access) {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) return true;else return false;\n  } else return true;\n}; // /**\n//  * @param {Array} list 通过路由列表得到菜单列表\n//  * @returns {Array}\n//  */\n// export const getMenuByRouter = (list, access) => {\n//   let res = []\n//   forEach(list, item => {\n//     if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n//       let obj = {\n//         icon: (item.meta && item.meta.icon) || '',\n//         name: item.name,\n//         meta: item.meta\n//       }\n//       if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n//         obj.children = getMenuByRouter(item.children, access)\n//       }\n//       if (item.meta && item.meta.href) obj.href = item.meta.href\n//       if (showThisMenuEle(item, access)) res.push(obj)\n//     }\n//   })\n//   return res\n// }\n\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\n\n\nexport var getMenuByRouter = function getMenuByRouter(list, access) {\n  var res = [];\n  forEach(list, function (item) {\n    // if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n    var obj = {\n      icon: item.meta && item.meta.icon || '',\n      name: item.name,\n      meta: item.meta\n    };\n\n    if ((hasChild(item) || item.meta && item.meta.showAlways) && showThisMenuEle(item, access)) {\n      obj.children = getMenuByRouter(item.children, access);\n    }\n\n    if (item.meta && item.meta.href) obj.href = item.meta.href;\n    if (showThisMenuEle(item, access)) res.push(obj); // }\n  });\n  return res;\n};\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\n\nexport var getNavlistByRouter = function getNavlistByRouter(list, access) {\n  var res = [];\n  forEach(list, function (item) {\n    if (!item.meta || item.meta && !item.meta.hideInMenu) {\n      var obj = {\n        icon: item.meta && item.meta.icon || '',\n        name: item.name,\n        meta: item.meta // if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n        //   obj.children = getMenuByRouter(item.children, access)\n        // }\n\n      };\n      if (item.meta && item.meta.href) obj.href = item.meta.href;\n      if (showThisMenuEle(item, access)) res.push(obj);\n    }\n  });\n  return res;\n};\n/**\n * @param {Object} // 遍历后台传来的路由字符串，转换为组件对象\n * @returns {Object}\n */\n\nexport var filterAsyncRouter = function filterAsyncRouter(asyncRouterMap) {\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    if (route.component) {\n      if (route.component === 'Main') {\n        // Main组件特殊处理\n        route.component = Main;\n      } else if (route.component === 'SubMain') {\n        route.component = SubMain;\n      } else if (route.component === 'parentView') {\n        route.component = parentView;\n      } else {\n        route.component = _import(route.component);\n      }\n    }\n\n    if (route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children);\n    }\n\n    return true;\n  });\n  return accessedRouters;\n};\n/**\n * @param {Object} menu 树形结构的menu获取第一个child路由\n * @returns {Object}\n */\n\nexport var getFirstChildForMenu = function getFirstChildForMenu(menu) {\n  if (hasChild(menu)) {\n    return getFirstChildForMenu(menu.children[0]);\n  } else {\n    return menu;\n  }\n};\n/**\n * @param {Object} menu 树形结构的menu获取第一个child路由\n * @returns {Object}\n */\n\nexport var getFirstChildForMenuByRequest = function getFirstChildForMenuByRequest(list, name) {\n  var navItem = {};\n  forEach(list, function (item) {\n    if (item.name === name) {\n      navItem = getFirstChildForMenu(item);\n    }\n  });\n  return navItem;\n};\n/**\n * @param {Array} list 通过路由列表和navmenu得到侧边栏菜单列表\n * @returns {Array}\n */\n\nexport var getMenuByRouterForSidemenu = function getMenuByRouterForSidemenu(state, navMenu) {\n  var res = [];\n  forEach(navMenu, function (item) {\n    if (!item.meta || item.meta && !item.meta.hideInMenu) {\n      var obj = {\n        icon: item.meta && item.meta.icon || '',\n        name: item.name,\n        meta: item.meta\n      };\n\n      if (hasChild(item)) {\n        obj.children = getMenuByRouterForSidemenu(state, item.children);\n      }\n\n      res.push(obj);\n    }\n  });\n  return res;\n};\n/**\n * @param {Array} list 通过路由列表得到导航菜单列表\n * @returns {Array}\n */\n\nexport var getSidemenuList = function getSidemenuList(state, menulist) {\n  var res = [];\n  forEach(menulist, function (item) {\n    if (item.name === state.navMenu) {\n      if (item.children.length === 1 && !hasChild(item.children[0])) {\n        return [];\n      } else {\n        res = getMenuByRouterForSidemenu(state, item.children);\n      }\n    }\n  });\n  return res;\n};\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\n\nexport var getBreadCrumbList = function getBreadCrumbList(route, homeRoute) {\n  var homeItem = _objectSpread({}, homeRoute, {\n    icon: homeRoute.meta.icon\n  });\n\n  var routeMetched = route.matched;\n  if (routeMetched.some(function (item) {\n    return item.name === homeRoute.name;\n  })) return [homeItem];\n  var res = routeMetched.filter(function (item) {\n    return item.meta === undefined || !item.meta.hideInBread;\n  }).map(function (item) {\n    var meta = _objectSpread({}, item.meta);\n\n    if (meta.title && typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true;\n      meta.title = meta.title(route);\n    }\n\n    var obj = {\n      icon: item.meta && item.meta.icon || '',\n      name: item.name,\n      meta: meta\n    };\n    return obj;\n  });\n  res = res.filter(function (item) {\n    return !item.meta.hideInMenu;\n  });\n  return [_objectSpread({}, homeItem, {\n    to: homeRoute.path\n  })].concat(_toConsumableArray(res));\n};\nexport var getRouteTitleHandled = function getRouteTitleHandled(route) {\n  var router = _objectSpread({}, route);\n\n  var meta = _objectSpread({}, route.meta);\n\n  var title = '';\n\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true;\n      title = meta.title(router);\n    } else title = meta.title;\n  }\n\n  meta.title = title;\n  router.meta = meta;\n  return router;\n};\nexport var showTitle = function showTitle(item, vm) {\n  var _item$meta = item.meta,\n      title = _item$meta.title,\n      __titleIsFunction__ = _item$meta.__titleIsFunction__;\n  if (!title) return;\n\n  if (useI18n) {\n    if (title.includes('{{') && title.includes('}}') && useI18n) title = title.replace(/({{[\\s\\S]+?}})/, function (m, str) {\n      return str.replace(/{{([\\s\\S]*)}}/, function (m, _) {\n        return vm.$t(_.trim());\n      });\n    });else if (__titleIsFunction__) title = item.meta.title; // else title = vm.$t(item.name)  // ytt注释掉\n  } else title = item.meta && item.meta.title || item.name;\n\n  return title;\n};\n/**\n * @description 本地存储和获取标签导航列表\n */\n\nexport var setTagNavListInLocalstorage = function setTagNavListInLocalstorage(list) {\n  localStorage.tagNaveList = JSON.stringify(list);\n};\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\n\nexport var getTagNavListFromLocalstorage = function getTagNavListFromLocalstorage() {\n  var list = localStorage.tagNaveList;\n  return list ? JSON.parse(list) : [];\n};\n/**\n * @description 本地存储和获取后端路由\n */\n\nexport var setRouterInLocalstorage = function setRouterInLocalstorage(list) {\n  localStorage.router = JSON.stringify(list);\n};\n/**\n * @returns {Array} 本地存储和获取后端路由\n */\n\nexport var getRouterFromLocalstorage = function getRouterFromLocalstorage() {\n  var list = localStorage.router;\n  return list ? JSON.parse(list) : [];\n};\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\n\nexport var getHomeRoute = function getHomeRoute(routers) {\n  var homeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'home';\n  var i = -1;\n  var len = routers.length;\n  var homeRoute = {};\n\n  while (++i < len) {\n    var item = routers[i];\n\n    if (item.children && item.children.length) {\n      var res = getHomeRoute(item.children, homeName);\n      if (res.name) return res;\n    } else {\n      if (item.name === homeName) homeRoute = item;\n    }\n  }\n\n  return homeRoute;\n};\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\n\nexport var getNewTagList = function getNewTagList(list, newRoute) {\n  var name = newRoute.name,\n      path = newRoute.path,\n      meta = newRoute.meta;\n\n  var newList = _toConsumableArray(list);\n\n  if (newList.findIndex(function (item) {\n    return item.name === name;\n  }) >= 0) return newList;else newList.push({\n    name: name,\n    path: path,\n    meta: meta\n  });\n  return newList;\n};\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\n\nvar hasAccess = function hasAccess(access, route) {\n  if (route.meta && route.meta.access) return hasOneOf(access, route.meta.access);else return true;\n};\n/**\n * 权鉴\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\n\n\nexport var canTurnTo = function canTurnTo(name, access, routes) {\n  var routePermissionJudge = function routePermissionJudge(list) {\n    return list.some(function (item) {\n      if (item.children && item.children.length) {\n        return routePermissionJudge(item.children);\n      } else if (item.name === name) {\n        return hasAccess(access, item);\n      }\n    });\n  };\n\n  return routePermissionJudge(routes);\n};\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\n\nexport var getParams = function getParams(url) {\n  var keyValueArr = url.split('?')[1].split('&');\n  var paramObj = {};\n  keyValueArr.forEach(function (item) {\n    var keyValue = item.split('=');\n    paramObj[keyValue[0]] = keyValue[1];\n  });\n  return paramObj;\n};\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\n\nexport var getNextRoute = function getNextRoute(list, route) {\n  var res = {};\n\n  if (list.length === 2) {\n    res = getHomeRoute(list);\n  } else {\n    var index = list.findIndex(function (item) {\n      return routeEqual(item, route);\n    });\n    if (index === list.length - 1) res = list[list.length - 2];else res = list[index + 1];\n  }\n\n  return res;\n};\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\n\nexport var doCustomTimes = function doCustomTimes(times, callback) {\n  var i = -1;\n\n  while (++i < times) {\n    callback(i);\n  }\n};\n/**\n * @param {Object} file 从上传组件得到的文件对象\n * @returns {Promise} resolve参数是解析后的二维数组\n * @description 从Csv文件中解析出表格，解析成二维数组\n */\n\nexport var getArrayFromFile = function getArrayFromFile(file) {\n  var nameSplit = file.name.split('.');\n  var format = nameSplit[nameSplit.length - 1];\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsText(file); // 以文本格式读取\n\n    var arr = [];\n\n    reader.onload = function (evt) {\n      var data = evt.target.result; // 读到的数据\n\n      var pasteData = data.trim();\n      arr = pasteData.split(/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g).map(function (row) {\n        return row.split('\\t');\n      }).map(function (item) {\n        return item[0].split(',');\n      });\n      if (format === 'csv') resolve(arr);else reject(new Error('[Format Error]:你上传的不是Csv文件'));\n    };\n  });\n};\n/**\n * @param {Array} array 表格数据二维数组\n * @returns {Object} { columns, tableData }\n * @description 从二维数组中获取表头和表格数据，将第一行作为表头，用于在iView的表格中展示数据\n */\n\nexport var getTableDataFromArray = function getTableDataFromArray(array) {\n  var columns = [];\n  var tableData = [];\n\n  if (array.length > 1) {\n    var titles = array.shift();\n    columns = titles.map(function (item) {\n      return {\n        title: item,\n        key: item\n      };\n    });\n    tableData = array.map(function (item) {\n      var res = {};\n      item.forEach(function (col, i) {\n        res[titles[i]] = col;\n      });\n      return res;\n    });\n  }\n\n  return {\n    columns: columns,\n    tableData: tableData\n  };\n};\nexport var findNodeUpper = function findNodeUpper(ele, tag) {\n  if (ele.parentNode) {\n    if (ele.parentNode.tagName === tag.toUpperCase()) {\n      return ele.parentNode;\n    } else {\n      return findNodeUpper(ele.parentNode, tag);\n    }\n  }\n};\nexport var findNodeUpperByClasses = function findNodeUpperByClasses(ele, classes) {\n  var parentNode = ele.parentNode;\n\n  if (parentNode) {\n    var classList = parentNode.classList;\n\n    if (classList && classes.every(function (className) {\n      return classList.contains(className);\n    })) {\n      return parentNode;\n    } else {\n      return findNodeUpperByClasses(parentNode, classes);\n    }\n  }\n};\nexport var findNodeDownward = function findNodeDownward(ele, tag) {\n  var tagName = tag.toUpperCase();\n\n  if (ele.childNodes.length) {\n    var i = -1;\n    var len = ele.childNodes.length;\n\n    while (++i < len) {\n      var child = ele.childNodes[i];\n      if (child.tagName === tagName) return child;else return findNodeDownward(child, tag);\n    }\n  }\n};\nexport var showByAccess = function showByAccess(access, canViewAccess) {\n  return hasOneOf(canViewAccess, access);\n};\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\n\nexport var routeEqual = function routeEqual(route1, route2) {\n  var params1 = route1.params || {};\n  var params2 = route2.params || {};\n  var query1 = route1.query || {};\n  var query2 = route2.query || {};\n  return route1.name === route2.name && objEqual(params1, params2) && objEqual(query1, query2);\n};\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\n\nexport var routeHasExist = function routeHasExist(tagNavList, routeItem) {\n  var len = tagNavList.length;\n  var res = false;\n  doCustomTimes(len, function (index) {\n    if (routeEqual(tagNavList[index], routeItem)) res = true;\n  });\n  return res;\n};\nexport var localSave = function localSave(key, value) {\n  localStorage.setItem(key, value);\n};\nexport var localRead = function localRead(key) {\n  return localStorage.getItem(key) || '';\n}; // scrollTop animation\n\nexport var scrollTop = function scrollTop(el) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var to = arguments.length > 2 ? arguments[2] : undefined;\n  var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;\n  var endCallback = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }\n\n  var difference = Math.abs(from - to);\n  var step = Math.ceil(difference / duration * 50);\n\n  var scroll = function scroll(start, end, step) {\n    if (start === end) {\n      endCallback && endCallback();\n      return;\n    }\n\n    var d = start + step > end ? end : start + step;\n\n    if (start > end) {\n      d = start - step < end ? end : start - step;\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d);\n    } else {\n      el.scrollTop = d;\n    }\n\n    window.requestAnimationFrame(function () {\n      return scroll(d, end, step);\n    });\n  };\n\n  scroll(from, to, step);\n};\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\n\nexport var setTitle = function setTitle(routeItem, vm) {\n  var handledRoute = getRouteTitleHandled(routeItem);\n  var pageTitle = showTitle(handledRoute, vm);\n  var resTitle = pageTitle ? \"\".concat(title, \" - \").concat(pageTitle) : title;\n  window.document.title = resTitle;\n};",{"version":3,"sources":["D:\\iview-admin-master\\src\\libs\\util.js"],"names":["Cookies","config","forEach","hasOneOf","objEqual","Main","parentView","title","cookieExpires","useI18n","_import","require","process","env","NODE_ENV","TOKEN_KEY","setToken","token","set","expires","getToken","get","hasChild","item","children","length","showThisMenuEle","access","meta","getMenuByRouter","list","res","obj","icon","name","showAlways","href","push","getNavlistByRouter","hideInMenu","filterAsyncRouter","asyncRouterMap","accessedRouters","filter","route","component","SubMain","getFirstChildForMenu","menu","getFirstChildForMenuByRequest","navItem","getMenuByRouterForSidemenu","state","navMenu","getSidemenuList","menulist","getBreadCrumbList","homeRoute","homeItem","routeMetched","matched","some","undefined","hideInBread","map","__titleIsFunction__","to","path","getRouteTitleHandled","router","showTitle","vm","includes","replace","m","str","_","$t","trim","setTagNavListInLocalstorage","localStorage","tagNaveList","JSON","stringify","getTagNavListFromLocalstorage","parse","setRouterInLocalstorage","getRouterFromLocalstorage","getHomeRoute","routers","homeName","i","len","getNewTagList","newRoute","newList","findIndex","hasAccess","canTurnTo","routes","routePermissionJudge","getParams","url","keyValueArr","split","paramObj","keyValue","getNextRoute","index","routeEqual","doCustomTimes","times","callback","getArrayFromFile","file","nameSplit","format","Promise","resolve","reject","reader","FileReader","readAsText","arr","onload","evt","data","target","result","pasteData","row","Error","getTableDataFromArray","array","columns","tableData","titles","shift","key","col","findNodeUpper","ele","tag","parentNode","tagName","toUpperCase","findNodeUpperByClasses","classes","classList","every","className","contains","findNodeDownward","childNodes","child","showByAccess","canViewAccess","route1","route2","params1","params","params2","query1","query","query2","routeHasExist","tagNavList","routeItem","localSave","value","setItem","localRead","getItem","scrollTop","el","from","duration","endCallback","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","difference","Math","abs","step","ceil","scroll","start","end","d","scrollTo","setTitle","handledRoute","pageTitle","resTitle","document"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\n// cookie保存的天数\nimport config from '@/config'\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools'\n// 获取组件的方法\nimport Main from '@/components/main'\nimport parentView from '@/components/parent-view'\n\nconst { title, cookieExpires, useI18n } = config\nconst _import = require('../router/_import_' + process.env.NODE_ENV) // Layout 是架构组件，不在后台返回，在文件里单独引入\nexport const TOKEN_KEY = 'token'\n\nexport const setToken = (token) => {\n  Cookies.set(TOKEN_KEY, token, { expires: cookieExpires || 1 })\n}\n\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY)\n  if (token) return token\n  else return false\n}\n\nexport const hasChild = (item) => {\n  return item.children && item.children.length !== 0\n}\n\nconst showThisMenuEle = (item, access) => {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) return true\n    else return false\n  } else return true\n}\n// /**\n//  * @param {Array} list 通过路由列表得到菜单列表\n//  * @returns {Array}\n//  */\n// export const getMenuByRouter = (list, access) => {\n//   let res = []\n//   forEach(list, item => {\n//     if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n//       let obj = {\n//         icon: (item.meta && item.meta.icon) || '',\n//         name: item.name,\n//         meta: item.meta\n//       }\n//       if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n//         obj.children = getMenuByRouter(item.children, access)\n//       }\n//       if (item.meta && item.meta.href) obj.href = item.meta.href\n//       if (showThisMenuEle(item, access)) res.push(obj)\n//     }\n//   })\n//   return res\n// }\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\nexport const getMenuByRouter = (list, access) => {\n  let res = []\n  forEach(list, item => {\n    // if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n    let obj = {\n      icon: (item.meta && item.meta.icon) || '',\n      name: item.name,\n      meta: item.meta\n    }\n    if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n      obj.children = getMenuByRouter(item.children, access)\n    }\n    if (item.meta && item.meta.href) obj.href = item.meta.href\n    if (showThisMenuEle(item, access)) res.push(obj)\n    // }\n  })\n  return res\n}\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\nexport const getNavlistByRouter = (list, access) => {\n  let res = []\n  forEach(list, item => {\n    if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n      let obj = {\n        icon: (item.meta && item.meta.icon) || '',\n        name: item.name,\n        meta: item.meta\n      }\n      // if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n      //   obj.children = getMenuByRouter(item.children, access)\n      // }\n      if (item.meta && item.meta.href) obj.href = item.meta.href\n      if (showThisMenuEle(item, access)) res.push(obj)\n    }\n  })\n  return res\n}\n\n/**\n * @param {Object} // 遍历后台传来的路由字符串，转换为组件对象\n * @returns {Object}\n */\nexport const filterAsyncRouter = (asyncRouterMap) => {\n  const accessedRouters = asyncRouterMap.filter(route => {\n    if (route.component) {\n      if (route.component === 'Main') { // Main组件特殊处理\n        route.component = Main\n      } else if (route.component === 'SubMain') {\n        route.component = SubMain\n      } else if (route.component === 'parentView') {\n        route.component = parentView\n      } else {\n        route.component = _import(route.component)\n      }\n    }\n    if (route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children)\n    }\n    return true\n  })\n  return accessedRouters\n}\n/**\n * @param {Object} menu 树形结构的menu获取第一个child路由\n * @returns {Object}\n */\nexport const getFirstChildForMenu = (menu) => {\n  if (hasChild(menu)) {\n    return getFirstChildForMenu(menu.children[0])\n  } else {\n    return menu\n  }\n}\n\n/**\n * @param {Object} menu 树形结构的menu获取第一个child路由\n * @returns {Object}\n */\nexport const getFirstChildForMenuByRequest = (list, name) => {\n  let navItem = {}\n  forEach(list, item => {\n    if (item.name === name) {\n      navItem = getFirstChildForMenu(item)\n    }\n  })\n  return navItem\n}\n/**\n * @param {Array} list 通过路由列表和navmenu得到侧边栏菜单列表\n * @returns {Array}\n */\nexport const getMenuByRouterForSidemenu = (state, navMenu) => {\n  let res = []\n  forEach(navMenu, item => {\n    if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n      let obj = {\n        icon: (item.meta && item.meta.icon) || '',\n        name: item.name,\n        meta: item.meta\n      }\n      if (hasChild(item)) {\n        obj.children = getMenuByRouterForSidemenu(state, item.children)\n      }\n      res.push(obj)\n    }\n  })\n  return res\n}\n/**\n * @param {Array} list 通过路由列表得到导航菜单列表\n * @returns {Array}\n */\nexport const getSidemenuList = (state, menulist) => {\n  let res = []\n  forEach(menulist, item => {\n    if (item.name === state.navMenu) {\n      if (item.children.length === 1 && !hasChild(item.children[0])) {\n        return []\n      } else {\n        res = getMenuByRouterForSidemenu(state, item.children)\n      }\n    }\n  })\n  return res\n}\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\nexport const getBreadCrumbList = (route, homeRoute) => {\n  let homeItem = { ...homeRoute, icon: homeRoute.meta.icon }\n  let routeMetched = route.matched\n  if (routeMetched.some(item => item.name === homeRoute.name)) return [homeItem]\n  let res = routeMetched.filter(item => {\n    return item.meta === undefined || !item.meta.hideInBread\n  }).map(item => {\n    let meta = { ...item.meta }\n    if (meta.title && typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true\n      meta.title = meta.title(route)\n    }\n    let obj = {\n      icon: (item.meta && item.meta.icon) || '',\n      name: item.name,\n      meta: meta\n    }\n    return obj\n  })\n  res = res.filter(item => {\n    return !item.meta.hideInMenu\n  })\n  return [{ ...homeItem, to: homeRoute.path }, ...res]\n}\n\nexport const getRouteTitleHandled = (route) => {\n  let router = { ...route }\n  let meta = { ...route.meta }\n  let title = ''\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true\n      title = meta.title(router)\n    } else title = meta.title\n  }\n  meta.title = title\n  router.meta = meta\n  return router\n}\n\nexport const showTitle = (item, vm) => {\n  let { title, __titleIsFunction__ } = item.meta\n  if (!title) return\n  if (useI18n) {\n    if (title.includes('{{') && title.includes('}}') && useI18n) title = title.replace(/({{[\\s\\S]+?}})/, (m, str) => str.replace(/{{([\\s\\S]*)}}/, (m, _) => vm.$t(_.trim())))\n    else if (__titleIsFunction__) title = item.meta.title\n    // else title = vm.$t(item.name)  // ytt注释掉\n  } else title = (item.meta && item.meta.title) || item.name\n  return title\n}\n\n/**\n * @description 本地存储和获取标签导航列表\n */\nexport const setTagNavListInLocalstorage = list => {\n  localStorage.tagNaveList = JSON.stringify(list)\n}\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\nexport const getTagNavListFromLocalstorage = () => {\n  const list = localStorage.tagNaveList\n  return list ? JSON.parse(list) : []\n}\n/**\n * @description 本地存储和获取后端路由\n */\nexport const setRouterInLocalstorage = list => {\n  localStorage.router = JSON.stringify(list)\n}\n/**\n * @returns {Array} 本地存储和获取后端路由\n */\nexport const getRouterFromLocalstorage = () => {\n  const list = localStorage.router\n  return list ? JSON.parse(list) : []\n}\n\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\nexport const getHomeRoute = (routers, homeName = 'home') => {\n  let i = -1\n  let len = routers.length\n  let homeRoute = {}\n  while (++i < len) {\n    let item = routers[i]\n    if (item.children && item.children.length) {\n      let res = getHomeRoute(item.children, homeName)\n      if (res.name) return res\n    } else {\n      if (item.name === homeName) homeRoute = item\n    }\n  }\n  return homeRoute\n}\n\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\nexport const getNewTagList = (list, newRoute) => {\n  const { name, path, meta } = newRoute\n  let newList = [...list]\n  if (newList.findIndex(item => item.name === name) >= 0) return newList\n  else newList.push({ name, path, meta })\n  return newList\n}\n\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\nconst hasAccess = (access, route) => {\n  if (route.meta && route.meta.access) return hasOneOf(access, route.meta.access)\n  else return true\n}\n\n/**\n * 权鉴\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\nexport const canTurnTo = (name, access, routes) => {\n  const routePermissionJudge = (list) => {\n    return list.some(item => {\n      if (item.children && item.children.length) {\n        return routePermissionJudge(item.children)\n      } else if (item.name === name) {\n        return hasAccess(access, item)\n      }\n    })\n  }\n\n  return routePermissionJudge(routes)\n}\n\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\nexport const getParams = url => {\n  const keyValueArr = url.split('?')[1].split('&')\n  let paramObj = {}\n  keyValueArr.forEach(item => {\n    const keyValue = item.split('=')\n    paramObj[keyValue[0]] = keyValue[1]\n  })\n  return paramObj\n}\n\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\nexport const getNextRoute = (list, route) => {\n  let res = {}\n  if (list.length === 2) {\n    res = getHomeRoute(list)\n  } else {\n    const index = list.findIndex(item => routeEqual(item, route))\n    if (index === list.length - 1) res = list[list.length - 2]\n    else res = list[index + 1]\n  }\n  return res\n}\n\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\nexport const doCustomTimes = (times, callback) => {\n  let i = -1\n  while (++i < times) {\n    callback(i)\n  }\n}\n\n/**\n * @param {Object} file 从上传组件得到的文件对象\n * @returns {Promise} resolve参数是解析后的二维数组\n * @description 从Csv文件中解析出表格，解析成二维数组\n */\nexport const getArrayFromFile = (file) => {\n  let nameSplit = file.name.split('.')\n  let format = nameSplit[nameSplit.length - 1]\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file) // 以文本格式读取\n    let arr = []\n    reader.onload = function (evt) {\n      let data = evt.target.result // 读到的数据\n      let pasteData = data.trim()\n      arr = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\n        return row.split('\\t')\n      }).map(item => {\n        return item[0].split(',')\n      })\n      if (format === 'csv') resolve(arr)\n      else reject(new Error('[Format Error]:你上传的不是Csv文件'))\n    }\n  })\n}\n\n/**\n * @param {Array} array 表格数据二维数组\n * @returns {Object} { columns, tableData }\n * @description 从二维数组中获取表头和表格数据，将第一行作为表头，用于在iView的表格中展示数据\n */\nexport const getTableDataFromArray = (array) => {\n  let columns = []\n  let tableData = []\n  if (array.length > 1) {\n    let titles = array.shift()\n    columns = titles.map(item => {\n      return {\n        title: item,\n        key: item\n      }\n    })\n    tableData = array.map(item => {\n      let res = {}\n      item.forEach((col, i) => {\n        res[titles[i]] = col\n      })\n      return res\n    })\n  }\n  return {\n    columns,\n    tableData\n  }\n}\n\nexport const findNodeUpper = (ele, tag) => {\n  if (ele.parentNode) {\n    if (ele.parentNode.tagName === tag.toUpperCase()) {\n      return ele.parentNode\n    } else {\n      return findNodeUpper(ele.parentNode, tag)\n    }\n  }\n}\n\nexport const findNodeUpperByClasses = (ele, classes) => {\n  let parentNode = ele.parentNode\n  if (parentNode) {\n    let classList = parentNode.classList\n    if (classList && classes.every(className => classList.contains(className))) {\n      return parentNode\n    } else {\n      return findNodeUpperByClasses(parentNode, classes)\n    }\n  }\n}\n\nexport const findNodeDownward = (ele, tag) => {\n  const tagName = tag.toUpperCase()\n  if (ele.childNodes.length) {\n    let i = -1\n    let len = ele.childNodes.length\n    while (++i < len) {\n      let child = ele.childNodes[i]\n      if (child.tagName === tagName) return child\n      else return findNodeDownward(child, tag)\n    }\n  }\n}\n\nexport const showByAccess = (access, canViewAccess) => {\n  return hasOneOf(canViewAccess, access)\n}\n\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\nexport const routeEqual = (route1, route2) => {\n  const params1 = route1.params || {}\n  const params2 = route2.params || {}\n  const query1 = route1.query || {}\n  const query2 = route2.query || {}\n  return (route1.name === route2.name) && objEqual(params1, params2) && objEqual(query1, query2)\n}\n\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\nexport const routeHasExist = (tagNavList, routeItem) => {\n  let len = tagNavList.length\n  let res = false\n  doCustomTimes(len, (index) => {\n    if (routeEqual(tagNavList[index], routeItem)) res = true\n  })\n  return res\n}\n\nexport const localSave = (key, value) => {\n  localStorage.setItem(key, value)\n}\n\nexport const localRead = (key) => {\n  return localStorage.getItem(key) || ''\n}\n\n// scrollTop animation\nexport const scrollTop = (el, from = 0, to, duration = 500, endCallback) => {\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = (\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        return window.setTimeout(callback, 1000 / 60)\n      }\n    )\n  }\n  const difference = Math.abs(from - to)\n  const step = Math.ceil(difference / duration * 50)\n\n  const scroll = (start, end, step) => {\n    if (start === end) {\n      endCallback && endCallback()\n      return\n    }\n\n    let d = (start + step > end) ? end : start + step\n    if (start > end) {\n      d = (start - step < end) ? end : start - step\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d)\n    } else {\n      el.scrollTop = d\n    }\n    window.requestAnimationFrame(() => scroll(d, end, step))\n  }\n  scroll(from, to, step)\n}\n\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\nexport const setTitle = (routeItem, vm) => {\n  const handledRoute = getRouteTitleHandled(routeItem)\n  const pageTitle = showTitle(handledRoute, vm)\n  const resTitle = pageTitle ? `${title} - ${pageTitle}` : title\n  window.document.title = resTitle\n}\n"]}]}