{"remainingRequest":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iview-admin-master\\src\\components\\tree-select\\tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iview-admin-master\\src\\components\\tree-select\\tree-select.vue","mtime":1560231513000},{"path":"D:\\iview-admin-master\\.babelrc","mtime":1560231513000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\iview-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Emitter from 'iview/src/mixins/emitter';\nimport TreeSelectTreeItem from \"./tree-select-tree.vue\";\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem: TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loadData: Function\n  },\n  data: function data() {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    };\n  },\n  provide: function provide() {\n    return {\n      parent: this\n    };\n  },\n  methods: {\n    handleChange: function handleChange(selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected);\n      this.isChangedByTree = false;\n    },\n    handleTreeCheck: function handleTreeCheck(selectedArray) {\n      this.isChangedByTree = true;\n      this.$emit('input', selectedArray.map(function (item) {\n        return item.id;\n      }));\n    },\n    handleClear: function handleClear() {\n      this.$refs.select.reset();\n    }\n  }\n};",{"version":3,"sources":["tree-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,kBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAHA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AATA,GANA;AAiBA,EAAA,IAjBA,kBAiBA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,QADA,EACA;AACA,UAAA,CAAA,KAAA,eAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA,QAAA;AACA,WAAA,eAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,eALA,2BAKA,aALA,EAKA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,aAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,KARA;AASA,IAAA,WATA,yBASA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAXA;AA5BA,CAAA","sourcesContent":["<template>\n  <Select\n    ref=\"select\"\n    class=\"tree-select\"\n    v-bind=\"$attrs\"\n    @on-change=\"handleChange\"\n    multiple\n  >\n    <tree-select-tree-item\n      :selectedArray=\"value\"\n      :data=\"data\"\n      @on-clear=\"handleClear\"\n      :load-data=\"loadData\"\n      @on-check=\"handleTreeCheck\"\n    ></tree-select-tree-item>\n  </Select>\n</template>\n\n<script>\nimport Emitter from 'iview/src/mixins/emitter'\nimport TreeSelectTreeItem from './tree-select-tree.vue'\nexport default {\n  name: 'TreeSelect',\n  mixins: [Emitter],\n  components: {\n    TreeSelectTreeItem\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    data: {\n      type: Array,\n      default: () => []\n    },\n    loadData: Function\n  },\n  data () {\n    return {\n      isChangedByTree: true,\n      isInit: true\n    }\n  },\n  provide () {\n    return {\n      parent: this\n    }\n  },\n  methods: {\n    handleChange (selected) {\n      if (!this.isChangedByTree) this.$emit('input', selected)\n      this.isChangedByTree = false\n    },\n    handleTreeCheck (selectedArray) {\n      this.isChangedByTree = true\n      this.$emit('input', selectedArray.map(item => item.id))\n    },\n    handleClear () {\n      this.$refs.select.reset()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.tree-select {\n  .ivu-select-dropdown {\n    padding: 0 6px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/tree-select"}]}